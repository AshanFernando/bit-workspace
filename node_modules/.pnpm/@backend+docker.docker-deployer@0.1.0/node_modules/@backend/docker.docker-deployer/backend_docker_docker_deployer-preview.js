!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["backend.docker/docker-deployer-preview"]=t():e["backend.docker/docker-deployer-preview"]=t()}(self,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var a in n)e.o(n,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:n[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{compositions:()=>l,compositions_metadata:()=>u,overview:()=>s});var n={};e.r(n),e.d(n,{default:()=>m}),React;const a=MdxJsReact,o=TeambitMdxUiMdxScopeContext;var i=["components"];function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r.apply(this,arguments)}var d={},p="wrapper";function m(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,i);return(0,a.mdx)(p,r({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)(o.MDXScopeProvider,{components:{},mdxType:"MDXScopeProvider"},(0,a.mdx)("p",null,"Build task responsible of building and pushing Docker images based on Bit apps."),(0,a.mdx)("h2",null,"Usage"),(0,a.mdx)("p",null,"First, apply the task to the build pipeline (or tag/snap):"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-ts"},"import { ViteReact } from '@bitdev/react.app-types.vite-react';\nimport { DockerDeploy } from '@backend/docker.docker-deployer';\n\nexport default ViteReact.from({\n  name: 'vite-app',\n  ssr: true,\n  deploy: DockerDeploy.deploy({\n    org: 'bitdevcommunity',\n    buildOptions: {\n      platform: 'linux/amd64',\n    },\n    pushOptions: {\n      authconfig: {\n        username: 'bitdevcommunity',\n        password: process.env.DOCKER_PASSWORD || '',\n        serveraddress: 'https://index.docker.io/v1',\n      },\n    },\n  }),\n});\n")),(0,a.mdx)("p",null,"Then, for the apps you are going to use, add them to the workspace by using:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-bash"},"bit use <name-of-app>\n")),(0,a.mdx)("div",{className:"admonition admonition-info alert alert--info"},(0,a.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,a.mdx)("h5",{parentName:"div"},(0,a.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,a.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.mdx)("div",{parentName:"div",className:"admonition-content"},(0,a.mdx)("p",{parentName:"div"},"The app component has to be labeled as an app to be able to work in Ripple CI."))),(0,a.mdx)("p",null,"Finally, add a ",(0,a.mdx)("inlineCode",{parentName:"p"},"Dockerfile")," to the root of the app (example ",(0,a.mdx)("a",{parentName:"p",href:"https://bit.cloud/backend/docker/examples/vite-app/~code/Dockerfile"},"here"),") and build the app:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-bash"},"bit build\n")),(0,a.mdx)("h2",null,"Configuration"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"org")," - the Docker organization to push the image to. For example, ",(0,a.mdx)("inlineCode",{parentName:"li"},"bitdev"),", this will push the image to ",(0,a.mdx)("inlineCode",{parentName:"li"},"bitdev/<app-name>"),"."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"tag")," - the tag to use for the image. Overrides the default tag ",(0,a.mdx)("strong",{parentName:"li"},"and organization"),". For example, ",(0,a.mdx)("inlineCode",{parentName:"li"},"my-awesome-app:latest"),"."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"latest")," - whether to tag the image as ",(0,a.mdx)("inlineCode",{parentName:"li"},"latest")," or not. Defaults to ",(0,a.mdx)("inlineCode",{parentName:"li"},"false")," (the tag/snap version will be used)."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"push")," - whether to push the image to the registry or not. Defaults to ",(0,a.mdx)("inlineCode",{parentName:"li"},"false"),"."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"buildOptions")," - options to pass to the ",(0,a.mdx)("inlineCode",{parentName:"li"},"docker build")," command. For example, ",(0,a.mdx)("inlineCode",{parentName:"li"},"platform: linux/amd64"),". See ",(0,a.mdx)("a",{parentName:"li",href:"https://github.com/apocas/dockerode?tab=readme-ov-file#documentation"},"here")," for more information."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"pushOptions")," - options to pass to the ",(0,a.mdx)("inlineCode",{parentName:"li"},"docker push")," command. For example, authentication options. See ",(0,a.mdx)("a",{parentName:"li",href:"https://github.com/apocas/dockerode?tab=readme-ov-file#documentation"},"here")," for more information.",(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"pushOptions.authConfig.serveraddress")," - the registry to push the image to. Defaults to ",(0,a.mdx)("inlineCode",{parentName:"li"},"https://index.docker.io/v1/"),"."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"pushOptions.authConfig.username")," - the username to use for authentication."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"pushOptions.authConfig.password")," - the password to use for authentication."))))))}m.isMDXComponent=!0;const l=[],s=[n],u={compositions:[]};return t})()));