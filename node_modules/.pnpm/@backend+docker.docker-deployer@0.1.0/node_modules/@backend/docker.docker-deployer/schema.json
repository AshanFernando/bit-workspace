{
  "__schema": "APISchema",
  "location": {
    "filePath": "index.ts",
    "line": 1,
    "character": 1
  },
  "module": {
    "__schema": "ModuleSchema",
    "location": {
      "filePath": "index.ts",
      "line": 1,
      "character": 1
    },
    "exports": [
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 1,
          "character": 10
        },
        "name": "DockerDeploy",
        "exportNode": {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "docker-deployer.ts",
            "line": 59,
            "character": 1
          },
          "signature": "class DockerDeploy",
          "name": "DockerDeploy",
          "members": [
            {
              "__schema": "ConstructorSchema",
              "location": {
                "filePath": "docker-deployer.ts",
                "line": 60,
                "character": 2
              },
              "signature": "constructor DockerDeploy(options: DockerDeployerOptions): DockerDeploy",
              "name": "constructor",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 60,
                    "character": 14
                  },
                  "name": "options",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "docker-deployer.ts",
                      "line": 60,
                      "character": 32
                    },
                    "name": "DockerDeployerOptions"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "ThisTypeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 59,
                  "character": 1
                },
                "name": "DockerDeploy"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "docker-deployer.ts",
                "line": 62,
                "character": 2
              },
              "signature": "(method) DockerDeploy.deploy(options: DockerDeployerOptions): (deployContext: DeployContext) => Promise<void>",
              "name": "deploy",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 62,
                    "character": 16
                  },
                  "name": "options",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "docker-deployer.ts",
                      "line": 62,
                      "character": 25
                    },
                    "name": "DockerDeployerOptions"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 62,
                  "character": 2
                },
                "type": "(deployContext: DeployContext) => Promise<void>"
              },
              "modifiers": [
                "static"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "docker-deployer.ts",
                "line": 69,
                "character": 2
              },
              "signature": "(method) DockerDeploy.deploy(context: DeployContext): Promise<void>",
              "name": "deploy",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 69,
                    "character": 15
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "docker-deployer.ts",
                      "line": 69,
                      "character": 24
                    },
                    "name": "DeployContext",
                    "internalFilePath": "docker-deployer.ts"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 69,
                  "character": 40
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "docker-deployer.ts",
                      "line": 69,
                      "character": 48
                    },
                    "name": "void"
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            }
          ],
          "extendsNodes": [],
          "implementNodes": []
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 2,
          "character": 15
        },
        "name": "DockerDeployerOptions",
        "exportNode": {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "docker-deployer.ts",
            "line": 10,
            "character": 1
          },
          "signature": "type DockerDeployerOptions = {\n    latest?: boolean;\n    org?: string;\n    tag?: string;\n    version?: string;\n    buildOptions?: Docker.ImageBuildOptions;\n    pushOptions?: Docker.ImagePushOptions;\n    copyNodeModules?: boolean;\n    dockerfileTemplate: DockerFileTemplate | string;\n    entryFile: string;\n}",
          "name": "DockerDeployerOptions",
          "type": {
            "__schema": "TypeLiteralSchema",
            "location": {
              "filePath": "docker-deployer.ts",
              "line": 10,
              "character": 37
            },
            "members": [
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 14,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 11,
                    "character": 2
                  },
                  "raw": "/**\n\t * if true, the image will be tagged as latest\n\t */",
                  "comment": "if true, the image will be tagged as latest"
                },
                "signature": "(property) latest?: boolean",
                "name": "latest",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 14,
                    "character": 11
                  },
                  "name": "boolean"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 18,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 15,
                    "character": 2
                  },
                  "raw": "/**\n\t * the organization to use for the image tag (e.g. my-org/my-app)\n\t */",
                  "comment": "the organization to use for the image tag (e.g. my-org/my-app)"
                },
                "signature": "(property) org?: string",
                "name": "org",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 18,
                    "character": 8
                  },
                  "name": "string"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 22,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 19,
                    "character": 2
                  },
                  "raw": "/**\n\t * override tag of the image\n\t */",
                  "comment": "override tag of the image"
                },
                "signature": "(property) tag?: string",
                "name": "tag",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 22,
                    "character": 8
                  },
                  "name": "string"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 26,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 23,
                    "character": 2
                  },
                  "raw": "/**\n\t * the version to append to the tag\n\t */",
                  "comment": "the version to append to the tag"
                },
                "signature": "(property) version?: string",
                "name": "version",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 26,
                    "character": 12
                  },
                  "name": "string"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 27,
                  "character": 2
                },
                "signature": "(property) buildOptions?: Docker.ImageBuildOptions",
                "name": "buildOptions",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 27,
                    "character": 17
                  },
                  "name": "Docker.ImageBuildOptions"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 28,
                  "character": 2
                },
                "signature": "(property) pushOptions?: Docker.ImagePushOptions",
                "name": "pushOptions",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 28,
                    "character": 16
                  },
                  "name": "Docker.ImagePushOptions"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 33,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 29,
                    "character": 2
                  },
                  "raw": "/**\n\t * if true, node_modules will be copied to the public dir\n\t * @default false\n\t */",
                  "comment": "if true, node_modules will be copied to the public dir",
                  "tags": [
                    {
                      "__schema": "TagSchema",
                      "location": {
                        "filePath": "docker-deployer.ts",
                        "line": 31,
                        "character": 5
                      },
                      "tagName": "default",
                      "comment": "false"
                    }
                  ]
                },
                "signature": "(property) copyNodeModules?: boolean",
                "name": "copyNodeModules",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 33,
                    "character": 20
                  },
                  "name": "boolean"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 43,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 35,
                    "character": 2
                  },
                  "raw": "/**\n\t * The template to use for the Dockerfile\n\t * Can be a custom template or a Dockerfile relative path.\n\t * @example\n\t * ```ts\n\t * dockerfileTemplate: new NodeDockerFile()\n\t * ```\n\t */",
                  "comment": "The template to use for the Dockerfile\nCan be a custom template or a Dockerfile relative path.",
                  "tags": [
                    {
                      "__schema": "TagSchema",
                      "location": {
                        "filePath": "docker-deployer.ts",
                        "line": 38,
                        "character": 5
                      },
                      "tagName": "example",
                      "comment": "```ts\ndockerfileTemplate: new NodeDockerFile()\n```;\n"
                    }
                  ]
                },
                "signature": "(property) dockerfileTemplate: string | DockerFileTemplate",
                "name": "dockerfileTemplate",
                "type": {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 43,
                    "character": 22
                  },
                  "types": [
                    {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "docker-deployer.ts",
                        "line": 43,
                        "character": 22
                      },
                      "name": "DockerFileTemplate"
                    },
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "docker-deployer.ts",
                        "line": 43,
                        "character": 43
                      },
                      "name": "string"
                    }
                  ]
                },
                "isOptional": false
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 51,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 44,
                    "character": 2
                  },
                  "raw": "/**\n\t * Entry file for the app, used in the Dockerfile\n\t * @example\n\t * ```ts\n\t * entryFile: \"node-app.cjs\"\n\t * ```\n\t */",
                  "comment": "Entry file for the app, used in the Dockerfile",
                  "tags": [
                    {
                      "__schema": "TagSchema",
                      "location": {
                        "filePath": "docker-deployer.ts",
                        "line": 46,
                        "character": 5
                      },
                      "tagName": "example",
                      "comment": "```ts\nentryFile: \"node-app.cjs\"\n```;\n"
                    }
                  ]
                },
                "signature": "(property) entryFile: string",
                "name": "entryFile",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 51,
                    "character": 13
                  },
                  "name": "string"
                },
                "isOptional": false
              }
            ]
          }
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 3,
          "character": 10
        },
        "name": "HtmlDockerFile",
        "exportNode": {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "template.ts",
            "line": 171,
            "character": 1
          },
          "signature": "class HtmlDockerFile",
          "name": "HtmlDockerFile",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 172,
                "character": 2
              },
              "signature": "(property) HtmlDockerFile.name: string",
              "name": "name",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 172,
                  "character": 2
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "\"html\""
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 174,
                "character": 2
              },
              "signature": "(property) HtmlDockerFile.copyNodeModules: boolean",
              "name": "copyNodeModules",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 174,
                  "character": 2
                },
                "type": "boolean"
              },
              "isOptional": true,
              "defaultValue": "false"
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 176,
                "character": 2
              },
              "signature": "(method) HtmlDockerFile.generate(opts: GenerateOpts): string",
              "name": "generate",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "template.ts",
                    "line": 176,
                    "character": 11
                  },
                  "name": "opts",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 176,
                      "character": 17
                    },
                    "name": "GenerateOpts",
                    "internalFilePath": "template.ts"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 176,
                  "character": 32
                },
                "name": "string"
              },
              "modifiers": []
            }
          ],
          "extendsNodes": [],
          "implementNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "template.ts",
                "line": 171,
                "character": 40
              },
              "name": "implements DockerFileTemplate",
              "typeArgs": [],
              "expression": {
                "__schema": "InterfaceSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 5,
                  "character": 1
                },
                "name": "DockerFileTemplate",
                "signature": "interface DockerFileTemplate",
                "extendsNodes": [],
                "members": [
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 6,
                      "character": 2
                    },
                    "name": "name",
                    "signature": "(property) DockerFileTemplate.name: string",
                    "isOptional": false,
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "template.ts",
                        "line": 6,
                        "character": 8
                      },
                      "name": "string"
                    }
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 7,
                      "character": 2
                    },
                    "name": "copyNodeModules",
                    "signature": "(property) DockerFileTemplate.copyNodeModules: boolean",
                    "isOptional": false,
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "template.ts",
                        "line": 7,
                        "character": 19
                      },
                      "name": "boolean"
                    }
                  },
                  {
                    "__schema": "FunctionLikeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 8,
                      "character": 2
                    },
                    "name": "generate",
                    "modifiers": [],
                    "params": [
                      {
                        "__schema": "ParameterSchema",
                        "location": {
                          "filePath": "template.ts",
                          "line": 8,
                          "character": 11
                        },
                        "name": "opts",
                        "isOptional": false,
                        "isSpread": false,
                        "type": {
                          "__schema": "TypeRefSchema",
                          "location": {
                            "filePath": "template.ts",
                            "line": 8,
                            "character": 17
                          },
                          "name": "GenerateOpts",
                          "internalFilePath": "template.ts"
                        }
                      }
                    ],
                    "returnType": {
                      "__schema": "TypeUnionSchema",
                      "location": {
                        "filePath": "template.ts",
                        "line": 8,
                        "character": 32
                      },
                      "types": [
                        {
                          "__schema": "TypeRefSchema",
                          "location": {
                            "filePath": "template.ts",
                            "line": 8,
                            "character": 32
                          },
                          "name": "Promise",
                          "typeArgs": [
                            {
                              "__schema": "KeywordTypeSchema",
                              "location": {
                                "filePath": "template.ts",
                                "line": 8,
                                "character": 40
                              },
                              "name": "string"
                            }
                          ]
                        },
                        {
                          "__schema": "KeywordTypeSchema",
                          "location": {
                            "filePath": "template.ts",
                            "line": 8,
                            "character": 50
                          },
                          "name": "string"
                        }
                      ]
                    },
                    "signature": "(method) DockerFileTemplate.generate(opts: GenerateOpts): Promise<string> | string"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 3,
          "character": 26
        },
        "name": "NodeDockerFile",
        "exportNode": {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "template.ts",
            "line": 18,
            "character": 1
          },
          "signature": "class NodeDockerFile",
          "name": "NodeDockerFile",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 19,
                "character": 2
              },
              "signature": "(property) NodeDockerFile.name: string",
              "name": "name",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 19,
                  "character": 2
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "\"node\""
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 21,
                "character": 2
              },
              "signature": "(property) NodeDockerFile.copyNodeModules: boolean",
              "name": "copyNodeModules",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 21,
                  "character": 2
                },
                "type": "boolean"
              },
              "isOptional": true,
              "defaultValue": "false"
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 23,
                "character": 2
              },
              "signature": "(method) NodeDockerFile.generate(opts: GenerateOpts): Promise<string>",
              "name": "generate",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "template.ts",
                    "line": 23,
                    "character": 17
                  },
                  "name": "opts",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 23,
                      "character": 23
                    },
                    "name": "GenerateOpts",
                    "internalFilePath": "template.ts"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 23,
                  "character": 38
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 23,
                      "character": 46
                    },
                    "name": "string"
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            }
          ],
          "extendsNodes": [],
          "implementNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "template.ts",
                "line": 18,
                "character": 40
              },
              "name": "implements DockerFileTemplate",
              "typeArgs": [],
              "expression": {
                "__schema": "InterfaceSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 5,
                  "character": 1
                },
                "name": "DockerFileTemplate",
                "signature": "interface DockerFileTemplate",
                "extendsNodes": [],
                "members": [
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 6,
                      "character": 2
                    },
                    "name": "name",
                    "signature": "(property) DockerFileTemplate.name: string",
                    "isOptional": false,
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "template.ts",
                        "line": 6,
                        "character": 8
                      },
                      "name": "string"
                    }
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 7,
                      "character": 2
                    },
                    "name": "copyNodeModules",
                    "signature": "(property) DockerFileTemplate.copyNodeModules: boolean",
                    "isOptional": false,
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "template.ts",
                        "line": 7,
                        "character": 19
                      },
                      "name": "boolean"
                    }
                  },
                  {
                    "__schema": "FunctionLikeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 8,
                      "character": 2
                    },
                    "name": "generate",
                    "modifiers": [],
                    "params": [
                      {
                        "__schema": "ParameterSchema",
                        "location": {
                          "filePath": "template.ts",
                          "line": 8,
                          "character": 11
                        },
                        "name": "opts",
                        "isOptional": false,
                        "isSpread": false,
                        "type": {
                          "__schema": "TypeRefSchema",
                          "location": {
                            "filePath": "template.ts",
                            "line": 8,
                            "character": 17
                          },
                          "name": "GenerateOpts",
                          "internalFilePath": "template.ts"
                        }
                      }
                    ],
                    "returnType": {
                      "__schema": "TypeUnionSchema",
                      "location": {
                        "filePath": "template.ts",
                        "line": 8,
                        "character": 32
                      },
                      "types": [
                        {
                          "__schema": "TypeRefSchema",
                          "location": {
                            "filePath": "template.ts",
                            "line": 8,
                            "character": 32
                          },
                          "name": "Promise",
                          "typeArgs": [
                            {
                              "__schema": "KeywordTypeSchema",
                              "location": {
                                "filePath": "template.ts",
                                "line": 8,
                                "character": 40
                              },
                              "name": "string"
                            }
                          ]
                        },
                        {
                          "__schema": "KeywordTypeSchema",
                          "location": {
                            "filePath": "template.ts",
                            "line": 8,
                            "character": 50
                          },
                          "name": "string"
                        }
                      ]
                    },
                    "signature": "(method) DockerFileTemplate.generate(opts: GenerateOpts): Promise<string> | string"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 4,
          "character": 15
        },
        "name": "DockerFileTemplate",
        "exportNode": {
          "__schema": "InterfaceSchema",
          "location": {
            "filePath": "template.ts",
            "line": 5,
            "character": 1
          },
          "signature": "interface DockerFileTemplate",
          "name": "DockerFileTemplate",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 6,
                "character": 2
              },
              "signature": "(property) DockerFileTemplate.name: string",
              "name": "name",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 6,
                  "character": 8
                },
                "name": "string"
              },
              "isOptional": false
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 7,
                "character": 2
              },
              "signature": "(property) DockerFileTemplate.copyNodeModules: boolean",
              "name": "copyNodeModules",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 7,
                  "character": 19
                },
                "name": "boolean"
              },
              "isOptional": false
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 8,
                "character": 2
              },
              "signature": "(method) DockerFileTemplate.generate(opts: GenerateOpts): Promise<string> | string",
              "name": "generate",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "template.ts",
                    "line": 8,
                    "character": 11
                  },
                  "name": "opts",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 8,
                      "character": 17
                    },
                    "name": "GenerateOpts",
                    "internalFilePath": "template.ts"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeUnionSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 8,
                  "character": 32
                },
                "types": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 8,
                      "character": 32
                    },
                    "name": "Promise",
                    "typeArgs": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "template.ts",
                          "line": 8,
                          "character": 40
                        },
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 8,
                      "character": 50
                    },
                    "name": "string"
                  }
                ]
              },
              "modifiers": []
            }
          ],
          "extendsNodes": []
        }
      }
    ],
    "internals": []
  },
  "internals": [
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "docker-deployer.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "docker-deployer.ts",
            "line": 10,
            "character": 1
          },
          "signature": "type DockerDeployerOptions = {\n    latest?: boolean;\n    org?: string;\n    tag?: string;\n    version?: string;\n    buildOptions?: Docker.ImageBuildOptions;\n    pushOptions?: Docker.ImagePushOptions;\n    copyNodeModules?: boolean;\n    dockerfileTemplate: DockerFileTemplate | string;\n    entryFile: string;\n}",
          "name": "DockerDeployerOptions",
          "type": {
            "__schema": "TypeLiteralSchema",
            "location": {
              "filePath": "docker-deployer.ts",
              "line": 10,
              "character": 37
            },
            "members": [
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 14,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 11,
                    "character": 2
                  },
                  "raw": "/**\n\t * if true, the image will be tagged as latest\n\t */",
                  "comment": "if true, the image will be tagged as latest"
                },
                "signature": "(property) latest?: boolean",
                "name": "latest",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 14,
                    "character": 11
                  },
                  "name": "boolean"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 18,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 15,
                    "character": 2
                  },
                  "raw": "/**\n\t * the organization to use for the image tag (e.g. my-org/my-app)\n\t */",
                  "comment": "the organization to use for the image tag (e.g. my-org/my-app)"
                },
                "signature": "(property) org?: string",
                "name": "org",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 18,
                    "character": 8
                  },
                  "name": "string"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 22,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 19,
                    "character": 2
                  },
                  "raw": "/**\n\t * override tag of the image\n\t */",
                  "comment": "override tag of the image"
                },
                "signature": "(property) tag?: string",
                "name": "tag",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 22,
                    "character": 8
                  },
                  "name": "string"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 26,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 23,
                    "character": 2
                  },
                  "raw": "/**\n\t * the version to append to the tag\n\t */",
                  "comment": "the version to append to the tag"
                },
                "signature": "(property) version?: string",
                "name": "version",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 26,
                    "character": 12
                  },
                  "name": "string"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 27,
                  "character": 2
                },
                "signature": "(property) buildOptions?: Docker.ImageBuildOptions",
                "name": "buildOptions",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 27,
                    "character": 17
                  },
                  "name": "Docker.ImageBuildOptions"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 28,
                  "character": 2
                },
                "signature": "(property) pushOptions?: Docker.ImagePushOptions",
                "name": "pushOptions",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 28,
                    "character": 16
                  },
                  "name": "Docker.ImagePushOptions"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 33,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 29,
                    "character": 2
                  },
                  "raw": "/**\n\t * if true, node_modules will be copied to the public dir\n\t * @default false\n\t */",
                  "comment": "if true, node_modules will be copied to the public dir",
                  "tags": [
                    {
                      "__schema": "TagSchema",
                      "location": {
                        "filePath": "docker-deployer.ts",
                        "line": 31,
                        "character": 5
                      },
                      "tagName": "default",
                      "comment": "false"
                    }
                  ]
                },
                "signature": "(property) copyNodeModules?: boolean",
                "name": "copyNodeModules",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 33,
                    "character": 20
                  },
                  "name": "boolean"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 43,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 35,
                    "character": 2
                  },
                  "raw": "/**\n\t * The template to use for the Dockerfile\n\t * Can be a custom template or a Dockerfile relative path.\n\t * @example\n\t * ```ts\n\t * dockerfileTemplate: new NodeDockerFile()\n\t * ```\n\t */",
                  "comment": "The template to use for the Dockerfile\nCan be a custom template or a Dockerfile relative path.",
                  "tags": [
                    {
                      "__schema": "TagSchema",
                      "location": {
                        "filePath": "docker-deployer.ts",
                        "line": 38,
                        "character": 5
                      },
                      "tagName": "example",
                      "comment": "```ts\ndockerfileTemplate: new NodeDockerFile()\n```;\n"
                    }
                  ]
                },
                "signature": "(property) dockerfileTemplate: string | DockerFileTemplate",
                "name": "dockerfileTemplate",
                "type": {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 43,
                    "character": 22
                  },
                  "types": [
                    {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "docker-deployer.ts",
                        "line": 43,
                        "character": 22
                      },
                      "name": "DockerFileTemplate"
                    },
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "docker-deployer.ts",
                        "line": 43,
                        "character": 43
                      },
                      "name": "string"
                    }
                  ]
                },
                "isOptional": false
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 51,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 44,
                    "character": 2
                  },
                  "raw": "/**\n\t * Entry file for the app, used in the Dockerfile\n\t * @example\n\t * ```ts\n\t * entryFile: \"node-app.cjs\"\n\t * ```\n\t */",
                  "comment": "Entry file for the app, used in the Dockerfile",
                  "tags": [
                    {
                      "__schema": "TagSchema",
                      "location": {
                        "filePath": "docker-deployer.ts",
                        "line": 46,
                        "character": 5
                      },
                      "tagName": "example",
                      "comment": "```ts\nentryFile: \"node-app.cjs\"\n```;\n"
                    }
                  ]
                },
                "signature": "(property) entryFile: string",
                "name": "entryFile",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 51,
                    "character": 13
                  },
                  "name": "string"
                },
                "isOptional": false
              }
            ]
          }
        },
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "docker-deployer.ts",
            "line": 54,
            "character": 1
          },
          "signature": "type DeployContext = {\n    publicDir?: string;\n    metadata?: Record<string, unknown>;\n} & AppDeployContext",
          "name": "DeployContext",
          "type": {
            "__schema": "TypeIntersectionSchema",
            "location": {
              "filePath": "docker-deployer.ts",
              "line": 54,
              "character": 29
            },
            "types": [
              {
                "__schema": "TypeLiteralSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 54,
                  "character": 29
                },
                "members": [
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "docker-deployer.ts",
                      "line": 55,
                      "character": 2
                    },
                    "signature": "(property) publicDir?: string",
                    "name": "publicDir",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "docker-deployer.ts",
                        "line": 55,
                        "character": 14
                      },
                      "name": "string"
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "docker-deployer.ts",
                      "line": 56,
                      "character": 2
                    },
                    "signature": "(property) metadata?: Record<string, unknown>",
                    "name": "metadata",
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "docker-deployer.ts",
                        "line": 56,
                        "character": 13
                      },
                      "name": "Record",
                      "typeArgs": [
                        {
                          "__schema": "KeywordTypeSchema",
                          "location": {
                            "filePath": "docker-deployer.ts",
                            "line": 56,
                            "character": 20
                          },
                          "name": "string"
                        },
                        {
                          "__schema": "KeywordTypeSchema",
                          "location": {
                            "filePath": "docker-deployer.ts",
                            "line": 56,
                            "character": 28
                          },
                          "name": "unknown"
                        }
                      ]
                    },
                    "isOptional": true
                  }
                ]
              },
              {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 57,
                  "character": 5
                },
                "name": "AppDeployContext",
                "componentId": {
                  "scope": "teambit.harmony",
                  "name": "application"
                }
              }
            ]
          }
        },
        {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "docker-deployer.ts",
            "line": 59,
            "character": 1
          },
          "signature": "class DockerDeploy",
          "name": "DockerDeploy",
          "members": [
            {
              "__schema": "ConstructorSchema",
              "location": {
                "filePath": "docker-deployer.ts",
                "line": 60,
                "character": 2
              },
              "signature": "constructor DockerDeploy(options: DockerDeployerOptions): DockerDeploy",
              "name": "constructor",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 60,
                    "character": 14
                  },
                  "name": "options",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "docker-deployer.ts",
                      "line": 60,
                      "character": 32
                    },
                    "name": "DockerDeployerOptions"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "ThisTypeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 59,
                  "character": 1
                },
                "name": "DockerDeploy"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "docker-deployer.ts",
                "line": 62,
                "character": 2
              },
              "signature": "(method) DockerDeploy.deploy(options: DockerDeployerOptions): (deployContext: DeployContext) => Promise<void>",
              "name": "deploy",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 62,
                    "character": 16
                  },
                  "name": "options",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "docker-deployer.ts",
                      "line": 62,
                      "character": 25
                    },
                    "name": "DockerDeployerOptions"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 62,
                  "character": 2
                },
                "type": "(deployContext: DeployContext) => Promise<void>"
              },
              "modifiers": [
                "static"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "docker-deployer.ts",
                "line": 69,
                "character": 2
              },
              "signature": "(method) DockerDeploy.deploy(context: DeployContext): Promise<void>",
              "name": "deploy",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "docker-deployer.ts",
                    "line": 69,
                    "character": 15
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "docker-deployer.ts",
                      "line": 69,
                      "character": 24
                    },
                    "name": "DeployContext",
                    "internalFilePath": "docker-deployer.ts"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "docker-deployer.ts",
                  "line": 69,
                  "character": 40
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "docker-deployer.ts",
                      "line": 69,
                      "character": 48
                    },
                    "name": "void"
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            }
          ],
          "extendsNodes": [],
          "implementNodes": []
        }
      ],
      "internals": []
    },
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "template.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "InterfaceSchema",
          "location": {
            "filePath": "template.ts",
            "line": 5,
            "character": 1
          },
          "signature": "interface DockerFileTemplate",
          "name": "DockerFileTemplate",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 6,
                "character": 2
              },
              "signature": "(property) DockerFileTemplate.name: string",
              "name": "name",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 6,
                  "character": 8
                },
                "name": "string"
              },
              "isOptional": false
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 7,
                "character": 2
              },
              "signature": "(property) DockerFileTemplate.copyNodeModules: boolean",
              "name": "copyNodeModules",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 7,
                  "character": 19
                },
                "name": "boolean"
              },
              "isOptional": false
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 8,
                "character": 2
              },
              "signature": "(method) DockerFileTemplate.generate(opts: GenerateOpts): Promise<string> | string",
              "name": "generate",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "template.ts",
                    "line": 8,
                    "character": 11
                  },
                  "name": "opts",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 8,
                      "character": 17
                    },
                    "name": "GenerateOpts",
                    "internalFilePath": "template.ts"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeUnionSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 8,
                  "character": 32
                },
                "types": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 8,
                      "character": 32
                    },
                    "name": "Promise",
                    "typeArgs": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "template.ts",
                          "line": 8,
                          "character": 40
                        },
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 8,
                      "character": 50
                    },
                    "name": "string"
                  }
                ]
              },
              "modifiers": []
            }
          ],
          "extendsNodes": []
        },
        {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "template.ts",
            "line": 18,
            "character": 1
          },
          "signature": "class NodeDockerFile",
          "name": "NodeDockerFile",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 19,
                "character": 2
              },
              "signature": "(property) NodeDockerFile.name: string",
              "name": "name",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 19,
                  "character": 2
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "\"node\""
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 21,
                "character": 2
              },
              "signature": "(property) NodeDockerFile.copyNodeModules: boolean",
              "name": "copyNodeModules",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 21,
                  "character": 2
                },
                "type": "boolean"
              },
              "isOptional": true,
              "defaultValue": "false"
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 23,
                "character": 2
              },
              "signature": "(method) NodeDockerFile.generate(opts: GenerateOpts): Promise<string>",
              "name": "generate",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "template.ts",
                    "line": 23,
                    "character": 17
                  },
                  "name": "opts",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 23,
                      "character": 23
                    },
                    "name": "GenerateOpts",
                    "internalFilePath": "template.ts"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 23,
                  "character": 38
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 23,
                      "character": 46
                    },
                    "name": "string"
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            }
          ],
          "extendsNodes": [],
          "implementNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "template.ts",
                "line": 18,
                "character": 40
              },
              "name": "implements DockerFileTemplate",
              "typeArgs": [],
              "expression": {
                "__schema": "InterfaceSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 5,
                  "character": 1
                },
                "name": "DockerFileTemplate",
                "signature": "interface DockerFileTemplate",
                "extendsNodes": [],
                "members": [
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 6,
                      "character": 2
                    },
                    "name": "name",
                    "signature": "(property) DockerFileTemplate.name: string",
                    "isOptional": false,
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "template.ts",
                        "line": 6,
                        "character": 8
                      },
                      "name": "string"
                    }
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 7,
                      "character": 2
                    },
                    "name": "copyNodeModules",
                    "signature": "(property) DockerFileTemplate.copyNodeModules: boolean",
                    "isOptional": false,
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "template.ts",
                        "line": 7,
                        "character": 19
                      },
                      "name": "boolean"
                    }
                  },
                  {
                    "__schema": "FunctionLikeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 8,
                      "character": 2
                    },
                    "name": "generate",
                    "modifiers": [],
                    "params": [
                      {
                        "__schema": "ParameterSchema",
                        "location": {
                          "filePath": "template.ts",
                          "line": 8,
                          "character": 11
                        },
                        "name": "opts",
                        "isOptional": false,
                        "isSpread": false,
                        "type": {
                          "__schema": "TypeRefSchema",
                          "location": {
                            "filePath": "template.ts",
                            "line": 8,
                            "character": 17
                          },
                          "name": "GenerateOpts",
                          "internalFilePath": "template.ts"
                        }
                      }
                    ],
                    "returnType": {
                      "__schema": "TypeUnionSchema",
                      "location": {
                        "filePath": "template.ts",
                        "line": 8,
                        "character": 32
                      },
                      "types": [
                        {
                          "__schema": "TypeRefSchema",
                          "location": {
                            "filePath": "template.ts",
                            "line": 8,
                            "character": 32
                          },
                          "name": "Promise",
                          "typeArgs": [
                            {
                              "__schema": "KeywordTypeSchema",
                              "location": {
                                "filePath": "template.ts",
                                "line": 8,
                                "character": 40
                              },
                              "name": "string"
                            }
                          ]
                        },
                        {
                          "__schema": "KeywordTypeSchema",
                          "location": {
                            "filePath": "template.ts",
                            "line": 8,
                            "character": 50
                          },
                          "name": "string"
                        }
                      ]
                    },
                    "signature": "(method) DockerFileTemplate.generate(opts: GenerateOpts): Promise<string> | string"
                  }
                ]
              }
            }
          ]
        },
        {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "template.ts",
            "line": 171,
            "character": 1
          },
          "signature": "class HtmlDockerFile",
          "name": "HtmlDockerFile",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 172,
                "character": 2
              },
              "signature": "(property) HtmlDockerFile.name: string",
              "name": "name",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 172,
                  "character": 2
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "\"html\""
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 174,
                "character": 2
              },
              "signature": "(property) HtmlDockerFile.copyNodeModules: boolean",
              "name": "copyNodeModules",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 174,
                  "character": 2
                },
                "type": "boolean"
              },
              "isOptional": true,
              "defaultValue": "false"
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "template.ts",
                "line": 176,
                "character": 2
              },
              "signature": "(method) HtmlDockerFile.generate(opts: GenerateOpts): string",
              "name": "generate",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "template.ts",
                    "line": 176,
                    "character": 11
                  },
                  "name": "opts",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 176,
                      "character": 17
                    },
                    "name": "GenerateOpts",
                    "internalFilePath": "template.ts"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 176,
                  "character": 32
                },
                "name": "string"
              },
              "modifiers": []
            }
          ],
          "extendsNodes": [],
          "implementNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "template.ts",
                "line": 171,
                "character": 40
              },
              "name": "implements DockerFileTemplate",
              "typeArgs": [],
              "expression": {
                "__schema": "InterfaceSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 5,
                  "character": 1
                },
                "name": "DockerFileTemplate",
                "signature": "interface DockerFileTemplate",
                "extendsNodes": [],
                "members": [
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 6,
                      "character": 2
                    },
                    "name": "name",
                    "signature": "(property) DockerFileTemplate.name: string",
                    "isOptional": false,
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "template.ts",
                        "line": 6,
                        "character": 8
                      },
                      "name": "string"
                    }
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 7,
                      "character": 2
                    },
                    "name": "copyNodeModules",
                    "signature": "(property) DockerFileTemplate.copyNodeModules: boolean",
                    "isOptional": false,
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "template.ts",
                        "line": 7,
                        "character": 19
                      },
                      "name": "boolean"
                    }
                  },
                  {
                    "__schema": "FunctionLikeSchema",
                    "location": {
                      "filePath": "template.ts",
                      "line": 8,
                      "character": 2
                    },
                    "name": "generate",
                    "modifiers": [],
                    "params": [
                      {
                        "__schema": "ParameterSchema",
                        "location": {
                          "filePath": "template.ts",
                          "line": 8,
                          "character": 11
                        },
                        "name": "opts",
                        "isOptional": false,
                        "isSpread": false,
                        "type": {
                          "__schema": "TypeRefSchema",
                          "location": {
                            "filePath": "template.ts",
                            "line": 8,
                            "character": 17
                          },
                          "name": "GenerateOpts",
                          "internalFilePath": "template.ts"
                        }
                      }
                    ],
                    "returnType": {
                      "__schema": "TypeUnionSchema",
                      "location": {
                        "filePath": "template.ts",
                        "line": 8,
                        "character": 32
                      },
                      "types": [
                        {
                          "__schema": "TypeRefSchema",
                          "location": {
                            "filePath": "template.ts",
                            "line": 8,
                            "character": 32
                          },
                          "name": "Promise",
                          "typeArgs": [
                            {
                              "__schema": "KeywordTypeSchema",
                              "location": {
                                "filePath": "template.ts",
                                "line": 8,
                                "character": 40
                              },
                              "name": "string"
                            }
                          ]
                        },
                        {
                          "__schema": "KeywordTypeSchema",
                          "location": {
                            "filePath": "template.ts",
                            "line": 8,
                            "character": 50
                          },
                          "name": "string"
                        }
                      ]
                    },
                    "signature": "(method) DockerFileTemplate.generate(opts: GenerateOpts): Promise<string> | string"
                  }
                ]
              }
            }
          ]
        }
      ],
      "internals": [
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "template.ts",
            "line": 11,
            "character": 1
          },
          "signature": "type GenerateOpts = {\n    capsulePath: string;\n    publicDir: string;\n    appName: string;\n    entryFile: string;\n}",
          "name": "GenerateOpts",
          "type": {
            "__schema": "TypeLiteralSchema",
            "location": {
              "filePath": "template.ts",
              "line": 11,
              "character": 21
            },
            "members": [
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 12,
                  "character": 2
                },
                "signature": "(property) capsulePath: string",
                "name": "capsulePath",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "template.ts",
                    "line": 12,
                    "character": 15
                  },
                  "name": "string"
                },
                "isOptional": false
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 13,
                  "character": 2
                },
                "signature": "(property) publicDir: string",
                "name": "publicDir",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "template.ts",
                    "line": 13,
                    "character": 13
                  },
                  "name": "string"
                },
                "isOptional": false
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 14,
                  "character": 2
                },
                "signature": "(property) appName: string",
                "name": "appName",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "template.ts",
                    "line": 14,
                    "character": 11
                  },
                  "name": "string"
                },
                "isOptional": false
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "template.ts",
                  "line": 15,
                  "character": 2
                },
                "signature": "(property) entryFile: string",
                "name": "entryFile",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "template.ts",
                    "line": 15,
                    "character": 13
                  },
                  "name": "string"
                },
                "isOptional": false
              }
            ]
          }
        }
      ]
    }
  ],
  "componentId": {
    "scope": "backend.docker",
    "name": "docker-deployer",
    "version": "14e407442c5f0971a501dc573b8ac79c3276486c"
  },
  "taggedModuleExports": []
}