{
  "__schema": "APISchema",
  "location": {
    "filePath": "index.ts",
    "line": 1,
    "character": 1
  },
  "module": {
    "__schema": "ModuleSchema",
    "location": {
      "filePath": "index.ts",
      "line": 1,
      "character": 1
    },
    "exports": [
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 1,
          "character": 10
        },
        "name": "GKEAdapter",
        "exportNode": {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "gke.ts",
            "line": 28,
            "character": 1
          },
          "signature": "class GKEAdapter",
          "name": "GKEAdapter",
          "members": [
            {
              "__schema": "ConstructorSchema",
              "location": {
                "filePath": "gke.ts",
                "line": 35,
                "character": 3
              },
              "signature": "constructor GKEAdapter(gcloud: GKEAdapterOptions): GKEAdapter",
              "name": "constructor",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gke.ts",
                    "line": 35,
                    "character": 15
                  },
                  "name": "gcloud",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gke.ts",
                      "line": 35,
                      "character": 31
                    },
                    "name": "GKEAdapterOptions",
                    "internalFilePath": "gke.ts"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "ThisTypeSchema",
                "location": {
                  "filePath": "gke.ts",
                  "line": 28,
                  "character": 1
                },
                "name": "GKEAdapter"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "gke.ts",
                "line": 37,
                "character": 3
              },
              "signature": "(method) GKEAdapter.getCredentials(): Promise<{\n    endpoint: string;\n    certificate: string;\n    token: string;\n}>",
              "name": "getCredentials",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "gke.ts",
                  "line": 37,
                  "character": 3
                },
                "type": "Promise<{\n    endpoint: string;\n    certificate: string;\n    token: string;\n}>"
              },
              "modifiers": [
                "async"
              ]
            }
          ],
          "extendsNodes": [],
          "implementNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "gke.ts",
                "line": 28,
                "character": 36
              },
              "name": "implements K8Adapter",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "gke.ts",
                  "line": 28,
                  "character": 36
                },
                "name": "K8Adapter",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-4-21/k40af2/backend.kubernetes_adapters_gke@fd2c5c2f9c7482a99f703f5cf725a1447374331a/gke.ts"
              }
            }
          ]
        }
      }
    ],
    "internals": []
  },
  "internals": [
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "gke.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "gke.ts",
            "line": 28,
            "character": 1
          },
          "signature": "class GKEAdapter",
          "name": "GKEAdapter",
          "members": [
            {
              "__schema": "ConstructorSchema",
              "location": {
                "filePath": "gke.ts",
                "line": 35,
                "character": 3
              },
              "signature": "constructor GKEAdapter(gcloud: GKEAdapterOptions): GKEAdapter",
              "name": "constructor",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gke.ts",
                    "line": 35,
                    "character": 15
                  },
                  "name": "gcloud",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gke.ts",
                      "line": 35,
                      "character": 31
                    },
                    "name": "GKEAdapterOptions",
                    "internalFilePath": "gke.ts"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "ThisTypeSchema",
                "location": {
                  "filePath": "gke.ts",
                  "line": 28,
                  "character": 1
                },
                "name": "GKEAdapter"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "gke.ts",
                "line": 37,
                "character": 3
              },
              "signature": "(method) GKEAdapter.getCredentials(): Promise<{\n    endpoint: string;\n    certificate: string;\n    token: string;\n}>",
              "name": "getCredentials",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "gke.ts",
                  "line": 37,
                  "character": 3
                },
                "type": "Promise<{\n    endpoint: string;\n    certificate: string;\n    token: string;\n}>"
              },
              "modifiers": [
                "async"
              ]
            }
          ],
          "extendsNodes": [],
          "implementNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "gke.ts",
                "line": 28,
                "character": 36
              },
              "name": "implements K8Adapter",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "gke.ts",
                  "line": 28,
                  "character": 36
                },
                "name": "K8Adapter",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-4-21/k40af2/backend.kubernetes_adapters_gke@fd2c5c2f9c7482a99f703f5cf725a1447374331a/gke.ts"
              }
            }
          ]
        }
      ],
      "internals": [
        {
          "__schema": "ModuleSchema",
          "location": {
            "filePath": "gke.ts",
            "line": 10,
            "character": 1
          },
          "exports": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "gke.ts",
                "line": 10,
                "character": 7
              },
              "signature": "const client: gke.v1.ClusterManagerClient",
              "name": "client",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "gke.ts",
                  "line": 10,
                  "character": 7
                },
                "type": "gke.v1.ClusterManagerClient"
              },
              "isOptional": false,
              "defaultValue": "new gke.v1.ClusterManagerClient()"
            }
          ],
          "internals": []
        },
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "gke.ts",
            "line": 12,
            "character": 1
          },
          "signature": "type GKEAdapterOptions = {\n    zone: string;\n    clusterName: string;\n    keyJson: string;\n}",
          "name": "GKEAdapterOptions",
          "type": {
            "__schema": "TypeLiteralSchema",
            "location": {
              "filePath": "gke.ts",
              "line": 12,
              "character": 26
            },
            "members": [
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "gke.ts",
                  "line": 17,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "gke.ts",
                    "line": 13,
                    "character": 3
                  },
                  "raw": "/**\n   * The name (project-relative) of the Google Compute Engine zone in which the cluster resides,\n   * such as `us-central1-a`.\n   */",
                  "comment": "The name (project-relative) of the Google Compute Engine zone in which the cluster resides,\nsuch as `us-central1-a`."
                },
                "signature": "(property) zone: string",
                "name": "zone",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "gke.ts",
                    "line": 17,
                    "character": 9
                  },
                  "name": "string"
                },
                "isOptional": false
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "gke.ts",
                  "line": 21,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "gke.ts",
                    "line": 18,
                    "character": 3
                  },
                  "raw": "/**\n   * The name of the cluster.\n   */",
                  "comment": "The name of the cluster."
                },
                "signature": "(property) clusterName: string",
                "name": "clusterName",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "gke.ts",
                    "line": 21,
                    "character": 16
                  },
                  "name": "string"
                },
                "isOptional": false
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "gke.ts",
                  "line": 25,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "gke.ts",
                    "line": 22,
                    "character": 3
                  },
                  "raw": "/**\n   * The JSON key of the service account to use to authenticate with GCP. (Stringified JSON object)\n   */",
                  "comment": "The JSON key of the service account to use to authenticate with GCP. (Stringified JSON object)"
                },
                "signature": "(property) keyJson: string",
                "name": "keyJson",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "gke.ts",
                    "line": 25,
                    "character": 12
                  },
                  "name": "string"
                },
                "isOptional": false
              }
            ]
          }
        }
      ]
    }
  ],
  "componentId": {
    "scope": "backend.kubernetes",
    "name": "adapters/gke",
    "version": "fd2c5c2f9c7482a99f703f5cf725a1447374331a"
  },
  "taggedModuleExports": []
}