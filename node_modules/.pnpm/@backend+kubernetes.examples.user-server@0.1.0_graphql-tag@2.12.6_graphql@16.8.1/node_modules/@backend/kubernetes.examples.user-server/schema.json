{
  "__schema": "APISchema",
  "location": {
    "filePath": "index.ts",
    "line": 2,
    "character": 1
  },
  "module": {
    "__schema": "ModuleSchema",
    "location": {
      "filePath": "index.ts",
      "line": 2,
      "character": 1
    },
    "exports": [
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 2,
          "character": 10
        },
        "name": "UserServer",
        "exportNode": {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "user-server.ts",
            "line": 7,
            "character": 1
          },
          "doc": {
            "__schema": "DocSchema",
            "location": {
              "filePath": "user-server.ts",
              "line": 4,
              "character": 1
            },
            "raw": "/**\n * user server\n */",
            "comment": "user server"
          },
          "signature": "class UserServer",
          "name": "UserServer",
          "members": [
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "user-server.ts",
                "line": 11,
                "character": 5
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "user-server.ts",
                  "line": 8,
                  "character": 5
                },
                "raw": "/**\n     * list users.\n     */",
                "comment": "list users."
              },
              "signature": "(method) UserServer.listUsers(): Promise<User[]>",
              "name": "listUsers",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "user-server.ts",
                  "line": 11,
                  "character": 5
                },
                "type": "Promise<User[]>"
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "user-server.ts",
                "line": 20,
                "character": 5
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "user-server.ts",
                  "line": 17,
                  "character": 5
                },
                "raw": "/**\n     * create a new instance of a user server.\n     */",
                "comment": "create a new instance of a user server."
              },
              "signature": "(method) UserServer.from(): UserServer",
              "name": "from",
              "params": [],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "user-server.ts",
                  "line": 20,
                  "character": 5
                },
                "name": "UserServer"
              },
              "modifiers": [
                "static"
              ]
            }
          ],
          "extendsNodes": [],
          "implementNodes": []
        }
      }
    ],
    "internals": []
  },
  "internals": [],
  "componentId": {
    "scope": "backend.kubernetes",
    "name": "examples/user-server",
    "version": "2bea816a63ba00f1246cdd9a3276b40a6412037f"
  },
  "taggedModuleExports": []
}