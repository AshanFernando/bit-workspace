export type Tone = {
    /**
     * name of the tone.
     */
    name: string;
    /**
     * color in hex.
     */
    value: string;
};
export type ColorOptions = {
    /**
     * name of the color.
     */
    name?: string;
    /**
     * 100 weight color.
     */
    100?: string;
    /**
     * 200 weight color.
     */
    200?: string;
    /**
     * 300 weight color.
     */
    300?: string;
    /**
     * 400 weight color.
     */
    400?: string;
    /**
     * 500 weight color.
     */
    500?: string;
    /**
     * 600 weight color.
     */
    600?: string;
    /**
     * 700 weight color.
     */
    700?: string;
    /**
     * 800 weight color.
     */
    800?: string;
    /**
     * 900 weight color.
     */
    900?: string;
    /**
     * top weight for color.
     */
    1000?: string;
    /**
     * origin color
     * synonyms to `600` color weight.
     */
    origin: string;
};
export declare class Color {
    /**
     * name of the color.
     */
    readonly name: string;
    /**
     * origin color of the scheme.
     */
    readonly origin: string;
    /**
     * color scheme
     */
    private colorScheme;
    constructor(
    /**
     * name of the color.
     */
    name: string, 
    /**
     * origin color of the scheme.
     */
    origin: string, 
    /**
     * color scheme
     */
    colorScheme: string[]);
    /**
     * first color in the scheme is always white.
     */
    get 0(): string;
    /**
     * last color is always black.
     */
    get 1100(): string;
    /**
     * 100 weight of the color.
     */
    get 100(): string;
    /**
     * 200 weight of the color.
     */
    get 200(): string;
    /**
     * 300 weight of the color.
     */
    get 300(): string;
    /**
     * 400 weight of the color.
     */
    get 400(): string;
    /**
     * 500 weight of the color.
     */
    get 500(): string;
    /**
     * 600 weight of the color.
     */
    get 600(): string;
    /**
     * 700 weight of the color.
     */
    get 700(): string;
    /**
     * 800 weight of the color.
     */
    get 800(): string;
    /**
     * 900 weight of the color.
     */
    get 900(): string;
    /**
     * 1000 weight of the color.
     */
    get 1000(): string;
    /**
     * get the light color.
     */
    get light(): string;
    /**
     * get the dark color.
     */
    get dark(): string;
    /**
     * bold color
     * alias to 600.
     */
    get bold(): string;
    /**
     * get the main color.
     * alias to weight `600`
     */
    get default(): string;
    listToneKeys(): string[];
    listTones(): Tone[];
    toObject(): ColorOptions;
    /**
     * create a color object.
     */
    static from(plainColor?: ColorOptions): Color;
}
