/**
 * spacing weight is a level in the spacing scheme
 */
export class SpacingWeight {
    constructor(
    /**
     * options for computing the spacing weight.
     */
    options) {
        this.options = options;
    }
    get segment() {
        return this.options.segment;
    }
    /**
     * level for the spacing weight.
     */
    get level() {
        return this.options.level;
    }
    get multiplier() {
        return this.options.multiplier;
    }
    /**
     * weight for the spacing.
     */
    get weight() {
        return this.multiplier * 100;
    }
    /**
     * token name for spacing.
     */
    get token() {
        return `space-${this.weight}`;
    }
    /**
     * size computed for the level in rem.
     */
    get rem() {
        return `${(this.pixels * 0.063)}rem`;
    }
    get px() {
        return `${this.pixels.toString()}px`;
    }
    /**
     * pixels computed for the level.
     */
    get pixels() {
        return this.options.baseUnit * this.multiplier;
    }
    toObject() {
        return {
            pixels: this.pixels,
            rem: this.rem,
            token: this.token,
            multiplier: this.multiplier,
            weight: this.weight
        };
    }
    toToken() {
        return {
            [`${this.weight}.px`]: this.px,
            [`${this.weight}.rem`]: this.rem,
        };
    }
    /**
     * create a spacing weight.
     */
    static create(options) {
        return new SpacingWeight(options);
    }
}
//# sourceMappingURL=spacing-weight.js.map