import type { ReactNode } from 'react';
import classNames from 'classnames';
import styles from './flex.module.scss';
import type { FlexAlignItems, FlexDirection, FlexJustifyContent } from './flex-options.js';

export type FlexProps = {
  /**
   * children to render in the flex layout.
   */
  children?: ReactNode;

  /**
   * direction for the flex layout.
   */
  direction?: FlexDirection;

  /**
   * reverse the direction.
   */
  reverse?: boolean;

  /**
   * class name to inject.
   */
  className?: string;

  /**
   * gap to use for the flex layout.
   * defaults to X
   */
  gap?: string|number;

  /**
   * set the flex layout justify content.
   */
  justifyContent?: FlexJustifyContent;

  /**
   * set the flex layout align items.
   */
  alignItems?: FlexAlignItems;
} & React.HTMLAttributes<HTMLDivElement>;

export function Flex({
  children,
  className,
  direction,
  justifyContent,
  alignItems,
  gap,
  ...rest
}: FlexProps) {
  const userInlineStyles = rest.style || {};

  return (
    <div
      {...rest}
      style={{ justifyContent, alignItems, flexDirection: direction, gap, ...userInlineStyles }}
      className={classNames(styles.flex, className)}
    >
      {children}
    </div>
  );
}
