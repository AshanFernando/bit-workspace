import type { ReactNode } from 'react';
import classNames from 'classnames';
import {
  Link as BaseLink,
  LinkProps as BaseLinkProps,
} from '@teambit/base-react.navigation.link';
import styles from './link.module.scss';

export type LinkProps = {
  /**
   * children for the link.
   */
  children?: ReactNode;

  /**
   * href for the link.
   */
  href: string;

  /**
   * force the use of a native `a` element and ignore the contextual implemented Link.
   */
  native?: boolean;

  /**
   * treat as an external link. open in a new tab.
   */
  external?: boolean;

  /**
   * class to apply when `href` matches the current location.
   */
  activeClassName?: string;

  /**
   * styles to apply when `href` matches the current location
   */
  activeStyle?: React.CSSProperties;

  /**
   * explicitly apply active styles.
   * If left undefined, the link will automatically become "active" if href matches the current url.
   */
  active?: boolean;

  /**
   * href should match url exactly to set as active, when using active="auto"
   */
  exact?: boolean;

  /**
   * include trailing slash on the location pathname, when using active="auto"
   */
  strict?: boolean;

  /**
   * exclude all default styles.
   */
  noStyle?: boolean;
} & BaseLinkProps;

export function Link({ children, className, noStyle, ...rest }: LinkProps) {
  return (
    <BaseLink {...rest} className={classNames(!noStyle ? styles.link: undefined, className)}>
      {children}
    </BaseLink>
  );
}
