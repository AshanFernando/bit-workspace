import { ComponentType, ReactNode } from 'react';
import { createTheme } from './create-theme.js';
import { useTheme } from './sparks-theme-provider.js';
// import { useTheme } from './sparks-theme-provider.js';
import { SparksTheme } from './sparks-theme.js';

export type ThemeType = ComponentType<{
  children?: ReactNode
}>;

// eslint-disable-next-line react/prop-types, react/require-default-props
export const ThemeUsage = ({ Theme = SparksTheme }: { Theme?: ThemeType }) => {
  const theme = useTheme();

  return (
    <Theme>
      <div style={{ display: 'flex', flexDirection: 'column', gap: 8, minWidth: 250 }}>
        Primary <div style={{ backgroundColor: 'var(--fill-primary-default)', width: 50, height: 50 }} />
        Secondary <div style={{ backgroundColor: 'var(--fill-secondary-default)', width: 50, height: 50 }} />
        Font color <div style={{ backgroundColor: 'var(--content-default)', width: 50, height: 50 }} />
        <div style={{ width: 50, height: 50 }}>Font size is {theme.content.size}</div>        
      </div>
    </Theme>
  );
};

export const ThemeComposition = () => {
  const { ThemeProvider: WayneThemeProvider } = createTheme({
    palette: {
      primary: {
        origin: '#540055',
      },
    },
  });

  return (
    <ThemeUsage Theme={WayneThemeProvider} />
  );
};

// @todo berco we need to complete preview for theme demonstrating the tokens.
// const TokenPalette = () => {
//   const theme = useTheme();
//   console.log(theme);

//   return (
//     <div>
//       {Object.keys(theme).map((key) => {
//         return (
//           <div key={key}>
//             {key}
//             {/* <div>{theme[key]}</div> */}
//           </div>
//         );
//       })}
//     </div>
//   );
// };

// export const DefaultThemeColors = () => {
//   return (
//     <SparksTheme>
//       <TokenPalette />
//     </SparksTheme>
//   );
// }
