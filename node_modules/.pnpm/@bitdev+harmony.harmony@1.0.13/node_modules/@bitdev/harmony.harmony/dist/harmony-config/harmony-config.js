import { stringify, assign } from 'comment-json';
import { join } from 'path';
import { readConfigFile } from './config-reader.js';
const userHome = require('user-home');
const defaultConfig = {
    cwd: process.cwd(),
    shouldThrow: true,
};
export class HarmonyConfig {
    constructor(raw) {
        this.raw = raw;
    }
    toObject() {
        return this.raw;
    }
    toString() {
        return stringify(this.raw);
    }
    static load(fileName, opts) {
        const mergedOpts = Object.assign(defaultConfig, opts);
        const config = readConfigFile(join(mergedOpts.cwd, fileName), mergedOpts.shouldThrow);
        if (mergedOpts.global) {
            return HarmonyConfig.loadGlobal(mergedOpts.global, config);
        }
        return new HarmonyConfig(config);
    }
    static loadGlobal(globalOpts, config = {}) {
        const globalConfig = readConfigFile(join(globalOpts.dir || userHome, globalOpts.name), false);
        return new HarmonyConfig(assign(config, globalConfig));
    }
}
//# sourceMappingURL=harmony-config.js.map