import { RuntimeNotDefined } from './exceptions/runtime-not-defined.js';
export class Runtimes {
    constructor(runtimeDefinition) {
        this.runtimeDefinition = runtimeDefinition;
    }
    add(runtime) {
        this.runtimeDefinition[runtime.name] = runtime;
        return this;
    }
    get(name) {
        const runtime = this.runtimeDefinition[name];
        if (!runtime)
            throw new RuntimeNotDefined(name);
        return this.runtimeDefinition[name];
    }
    list() {
        return Object.values(this.runtimeDefinition);
    }
    dispose(name) {
        delete this.runtimeDefinition[name];
        return this;
    }
    static async load(graph) {
        const runtimes = {};
        graph.extensions.forEach(manifest => {
            if (!manifest.declareRuntime)
                return;
            runtimes[manifest.declareRuntime.name] = manifest.declareRuntime;
        });
        return new Runtimes(runtimes);
    }
}
//# sourceMappingURL=runtimes.js.map