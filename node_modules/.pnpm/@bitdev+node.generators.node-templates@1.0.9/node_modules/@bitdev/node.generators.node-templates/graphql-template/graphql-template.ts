import {
  ComponentContext,
  ComponentFile,
  ComponentTemplate,
} from '@teambit/generator';
import { indexFile } from './files/index-file';
import { nodeAppFile } from './files/node-app';
import { AppRootFile } from './files/app-root';
import { expressAppFile } from './files/app';
import { docsFile } from './files/docs';
import { appSpecFile } from './files/app-test';
import { graphqlFile } from './files/graphql-file';

// TODO: replace this with "import {ComponentTemplateOptions} from '@teambit/generator';" once v1.3 is released
export type ExpressAppTemplateOptions = Partial<Pick<ComponentTemplate, 'name' | 'description' | 'hidden' | 'env'>>;

export class GraphQLServerTemplate implements ComponentTemplate {
  constructor(
    readonly name = 'graphql-server',
    readonly description = 'create a basic apollo graphql server',
    readonly hidden = false,
    readonly env?: string,
    readonly isApp = true,
    readonly installMissingDependencies = true
  ) {}

  generateFiles(context: ComponentContext): ComponentFile[] {
    return [
      indexFile(context),
      docsFile(context),
      appSpecFile(context),
      nodeAppFile(context),
      expressAppFile(context),
      graphqlFile(context),
      AppRootFile(context),
    ];
  }

  static from(options: ExpressAppTemplateOptions = {}) {
    return () =>
      new GraphQLServerTemplate(options.name, options.description, options.hidden, options.env);
  }
}
