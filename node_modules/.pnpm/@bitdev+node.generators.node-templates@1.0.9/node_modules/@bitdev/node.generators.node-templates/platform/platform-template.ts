import {
  ComponentContext,
  ComponentFile,
  ComponentTemplate,
} from '@teambit/generator';
import { indexFile } from './files/index-file';
import { nodeAppFile } from './files/node-app';
// import { expressAppFile } from './files/app';

// TODO: replace this with "import {ComponentTemplateOptions} from '@teambit/generator';" once v1.3 is released
export type ExpressAppTemplateOptions = Partial<Pick<ComponentTemplate, 'name' | 'description' | 'hidden' | 'env'>>;

export class PlatformTemplate implements ComponentTemplate {
  constructor(
    readonly name = 'platform',
    readonly description = 'compose a platform from services and apps',
    readonly hidden = false,
    readonly env?: string,
    readonly isApp = true,
    readonly installMissingDependencies = true
  ) {}

  generateFiles(context: ComponentContext): ComponentFile[] {
    return [
      indexFile(context),
      nodeAppFile(context),
      // expressAppFile(context),
    ];
  }

  static from(options: ExpressAppTemplateOptions = {}) {
    return () =>
      new PlatformTemplate(options.name, options.description, options.hidden, options.env);
  }
}
