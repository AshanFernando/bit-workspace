{"version":3,"names":["_react","data","require","_vite","_typescript","_preview","_typescript2","_defender","_defender2","_pkg","_generator","_nodeGenerators","_nodeGenerators2","_builder","_workspaceConfigFiles","_toolboxPerformance","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","TypeError","Number","NativeCompileCache","uninstall","NodeEnv","ReactEnv","constructor","args","resolve","CAPSULE_ARTIFACTS_DIR","compiler","TypescriptCompiler","from","esm","tsconfig","tsconfigPath","types","resolveTypes","__dirname","tsTypesPath","tester","VitestTester","config","preview","ReactPreview","previewConfig","splitComponentBundle","strategyName","linter","ESLintLinter","configPath","eslintConfigPath","pluginsPath","extensions","eslintExtensions","formatter","PrettierFormatter","prettierConfigPath","starters","StarterList","NodeWorkspaceStarter","generators","TemplateList","NodeEnvTemplate","EntityTemplate","NodeModuleTemplate","PlatformTemplate","NodeAppTemplate","ExpressAppTemplate","BitAppTemplate","GraphQLServerTemplate","build","Pipeline","TypescriptTask","VitestTask","snap","tag","package","PackageGenerator","packageJson","main","type","npmIgnore","workspaceConfig","ConfigWriterList","TypescriptConfigWriter","EslintConfigWriter","PrettierConfigWriter","schemaExtractor","TypeScriptExtractor","exports","_default","default"],"sourceRoot":"/tmp/capsules-root/tmp-aspects/2024-2-5/693808d8-9581-4d7d-9cf0-362c4b532b3f/bitdev.node_node-env@1.0.20","sources":["node-env.bit-env.ts"],"sourcesContent":["import { ReactEnv } from '@bitdev/react.react-env';\nimport { VitestTester, VitestTask } from '@teambit/vite.vitest-tester';\nimport type { ReactEnvInterface } from '@bitdev/react.react-env';\nimport { Compiler } from '@teambit/compiler';\n// import { TemplateList } from \"@teambit/generator\";\n// import { ReactComponentTemplate } from \"@teambit/react.generator.react-templates\";\nimport { TypeScriptExtractor } from \"@teambit/typescript\";\nimport { ReactPreview } from '@teambit/preview.react-preview';\nimport { EnvHandler } from '@teambit/envs';\nimport {\n  TypescriptCompiler,\n  resolveTypes,\n  TypescriptTask,\n  TypescriptConfigWriter,\n} from '@teambit/typescript.typescript-compiler';\nimport { ESLintLinter, EslintConfigWriter } from '@teambit/defender.eslint-linter';\n// import { EslintTask } from \"@teambit/defender.eslint-linter\";\n// import webpack from \"webpack\";\nimport { PrettierConfigWriter, PrettierFormatter } from '@teambit/defender.prettier-formatter';\nimport { Tester } from '@teambit/tester';\n// import { Pipeline } from \"@teambit/builder\";\nimport { Preview } from '@teambit/preview';\n// import { SchemaExtractor } from \"@teambit/schema\";\n// import webpackTransformer from \"./config/webpack.config\";\nimport { PackageGenerator } from '@teambit/pkg';\nimport { StarterList, TemplateList } from '@teambit/generator';\nimport { NodeModuleTemplate, ExpressAppTemplate, NodeAppTemplate, NodeEnvTemplate, EntityTemplate, BitAppTemplate, GraphQLServerTemplate, PlatformTemplate } from '@bitdev/node.generators.node-templates';\nimport { NodeWorkspaceStarter } from '@bitdev/node.generators.node-starters';\nimport { CAPSULE_ARTIFACTS_DIR, Pipeline } from '@teambit/builder';\nimport { ConfigWriterList } from '@teambit/workspace-config-files';\nimport { SchemaExtractor } from '@teambit/schema';\nimport { NativeCompileCache } from '@teambit/toolbox.performance.v8-cache';\n// Disable v8-caching because it breaks ESM loaders\nNativeCompileCache.uninstall();\n\nexport class NodeEnv extends ReactEnv implements ReactEnvInterface {\n  /**\n   * name of the environment. used for friendly mentions across bit.\n   */\n  name = 'node-env';\n\n  /**\n   * icon for the env. use this to build a more friendly env.\n   * uses react by default.\n   */\n  icon = 'https://static.bit.dev/extensions-icons/nodejs.svg';\n\n  /**\n   * return an instance of a Compiler. use components like typescript-compiler (teambit.typescript/typescript-compiler)\n   * or our babel-compiler (teambit.compilation/babel-compiler).\n   * @example\n   * return TypescriptCompiler.from({\n   *  tsconfig: require.resolve(\"./config/tsconfig.json\"), // path to tsconfig.json\n   *  types: resolveTypes(__dirname, [\"./types\"]),\n   *  typescript,\n   * });\n   */\n\n  // TODO: make sure we only run compiler once @david.\n  compiler(): EnvHandler<Compiler> {\n    return TypescriptCompiler.from({\n      esm: true,\n      tsconfig: this.tsconfigPath,\n      types: resolveTypes(__dirname, [this.tsTypesPath]),\n    });\n  }\n\n  /**\n   * returns an instance of a Bit tester implementation. use components like mocha-tester or\n   * jest-tester or [build your own](http/://bit.dev/reference/testing/set-up-tester).\n   */\n  tester(): EnvHandler<Tester> {\n    return VitestTester.from({\n      config: require.resolve('./config/vitest.config.mjs')\n    });\n    // return MochaTester.from({\n    //   mochaConfigPath: require.resolve('./config/.mocharc.js'),\n    //   babelConfig: require.resolve('./config/mocha-babel-config.js'),\n    // });\n  }\n\n  /**\n   * return an instance of a Bit preview instance. used for preview purposes.\n   * base preview is a general purpose webpack preview.\n   */\n  preview(): EnvHandler<Preview> {\n    return ReactPreview.from({\n      /**\n       * override the default docs template for components.\n       */\n      // docsTemplate: require.resolve('./preview/docs'),\n      /**\n       * mounters are used to mount components to DOM\n       * during preview. use them for wrapping your components\n       * with routing, theming, data fetching or other types\n       * of providers.\n       */\n      previewConfig: {\n        splitComponentBundle: false,\n        strategyName: 'component',\n      },\n      // mounter: require.resolve('./preview/mounter'),\n      // webpackModulePath: require.resolve(\"webpack\"),\n      // webpackDevServerModulePath: require.resolve(\"webpack-dev-server\")\n      // transformers: [webpackTransformer],\n    });\n  }\n\n  /**\n   * returns an instance of the default ESLint.\n   * config files would be used to validate coding standards in components.\n   * bit will write the minimum required files in any workspace to optimize\n   * for dev experience.\n   */\n  linter() {\n    return ESLintLinter.from({\n      tsconfig: this.tsconfigPath,\n      configPath: this.eslintConfigPath,\n      // resolve all plugins from the react environment.\n      pluginsPath: __dirname,\n      extensions: this.eslintExtensions,\n    });\n  }\n\n  /**\n   * used by bit's formatter. helps to standardize and automate\n   * code styling. can be used a build task or using bit lint and common\n   * ides.\n   */\n  formatter() {\n    return PrettierFormatter.from({\n      configPath: this.prettierConfigPath,\n    });\n  }\n\n  /**\n   * a list of starters for new projects. this helps create a quick and\n   * standardized\n   */\n  starters() {\n    return StarterList.from([\n      NodeWorkspaceStarter.from()\n    ]);\n  }\n\n  /**\n   * set a list of component templates to use across your\n   * workspaces. new workspaces would be set to include\n   * your envs by default.\n   */\n  generators() {\n    return TemplateList.from([\n      NodeEnvTemplate.from(),\n      EntityTemplate.from(),\n      NodeModuleTemplate.from(),\n      PlatformTemplate.from(),\n      NodeAppTemplate.from(),\n      ExpressAppTemplate.from(),\n      BitAppTemplate.from(),\n      GraphQLServerTemplate.from()\n    ]);\n  }\n\n  /**\n   * define the build pipeline for a component.\n   * pipelines are optimized for performance and consistency.\n   * making sure every component is independently built and tested.\n   */\n  build() {\n    return Pipeline.from([\n      TypescriptTask.from({\n        tsconfig: this.tsconfigPath,\n        types: resolveTypes(__dirname, [this.tsTypesPath]),\n      }),\n      VitestTask.from({\n        config: require.resolve('./config/vitest.config.mjs'),\n      }),\n    ]);\n  }\n\n  /**\n   * add build tasks to execute upon [snap](https://bit.dev/docs/snaps).\n   * use the snap pipeline for staging and test deployments\n   */\n  snap() {\n    return Pipeline.from([]);\n  }\n\n  /**\n   * add build tasks to execute upon [tag](https://bit.dev/docs/tags).\n   * use the tag pipeline for deployments, or other tasks required for\n   * publishing a semantic version for a component.\n   */\n  tag() {\n    return Pipeline.from([]);\n  }\n\n  /**\n   * configure and control the packaging process of components.\n   */\n  package() {\n    return PackageGenerator.from({\n      packageJson: {\n        main: 'dist/{main}.js',\n        types: '{main}.ts',\n        type: 'module',\n      },\n      npmIgnore: this.npmIgnore,\n    });\n  }\n\n  workspaceConfig(): ConfigWriterList {\n    return ConfigWriterList.from([\n      TypescriptConfigWriter.from({\n        tsconfig: this.tsconfigPath,\n        types: resolveTypes(__dirname, [\"./types\"]),\n      }),\n      EslintConfigWriter.from({\n        configPath: this.eslintConfigPath,\n        tsconfig: this.tsconfigPath,\n      }),\n      PrettierConfigWriter.from({\n        configPath: this.prettierConfigPath,\n      })\n    ]);\n  }\n\n  /**\n   * returns an instance of the default TypeScript extractor.\n   * used by default for type inference for both JS and TS.\n   */\n  schemaExtractor(): EnvHandler<SchemaExtractor> {\n    return TypeScriptExtractor.from({\n      tsconfig: require.resolve(\"./config/tsconfig.json\"),\n    });\n  }\n\n  protected tsconfigPath = require.resolve('./config/tsconfig.json');\n  \n  protected tsTypesPath = './types';\n\n  protected jestConfigPath = require.resolve('./config/jest.config');\n\n  protected eslintConfigPath = require.resolve('./config/eslintrc.js');\n  \n  protected eslintExtensions = ['.ts', '.tsx', '.js', '.jsx', '.mjs'];\n\n  protected prettierConfigPath = require.resolve('./config/prettier.config.js');\n  \n  protected prettierExtensions = [\n    '.js',\n    '.jsx',\n    '.ts',\n    '.tsx',\n    '.mjs',\n    '.cjs',\n    '.json',\n    '.css',\n    '.scss',\n    '.md',\n    '.mdx',\n    '.html',\n    '.yml',\n    '.yaml',\n  ];\n\n  protected previewMounter = require.resolve('./preview/mounter');\n\n  /**\n   * Default npm ignore paths.\n   * Will ignore the \"artifacts\" directory by default.\n   */\n  npmIgnore = [`${CAPSULE_ARTIFACTS_DIR}/`];\n}\n\nexport default new NodeEnv();\n"],"mappings":"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"}