import { BuildOptions } from 'esbuild';
import type { Application, DeployFn, AppContext, ApplicationInstance, BuildFn, AppBuildResult, AppBuildContext } from '@teambit/application';
import type { NodeServerOptions } from './node-server-options.js';
export declare class NodeServer implements Application {
    readonly name: string;
    readonly mainFile: Promise<string> | string;
    readonly customBuild?: BuildFn;
    readonly deploy?: DeployFn;
    readonly nodeBin: string;
    readonly artifactName: string;
    readonly bundleFileName: string;
    readonly esbuildOptions: BuildOptions;
    readonly showNameInOutputs: boolean;
    readonly distDir: string;
    readonly portRange: [number, number];
    constructor(name: string, mainFile: Promise<string> | string, customBuild?: BuildFn, deploy?: DeployFn, nodeBin?: string, artifactName?: string, bundleFileName?: string, esbuildOptions?: BuildOptions, showNameInOutputs?: boolean, distDir?: string, portRange?: [number, number]);
    applicationType: string;
    private getFileUrl;
    private getMainFile;
    run(context: AppContext): Promise<ApplicationInstance>;
    private computeEnvVars;
    private computePackageMap;
    private computeConfig;
    private get outputDir();
    build(context: AppBuildContext): Promise<AppBuildResult>;
    static from(options: NodeServerOptions): NodeServer;
}
