{
  "__schema": "APISchema",
  "location": {
    "filePath": "index.ts",
    "line": 1,
    "character": 1
  },
  "module": {
    "__schema": "ModuleSchema",
    "location": {
      "filePath": "index.ts",
      "line": 1,
      "character": 1
    },
    "exports": [
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 1,
          "character": 10
        },
        "name": "Platform",
        "exportNode": {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "platform.ts",
            "line": 31,
            "character": 1
          },
          "signature": "class Platform",
          "name": "Platform",
          "members": [
            {
              "__schema": "ConstructorSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 32,
                "character": 2
              },
              "signature": "constructor Platform(name: string, backends: PlatformLayer, frontends: PlatformLayer, userBuild?: PlatformBuildFn, userDeploy?: PlatformDeployFn): Platform",
              "name": "constructor",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 36,
                    "character": 3
                  },
                  "name": "name",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 36,
                      "character": 18
                    },
                    "name": "string"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 41,
                    "character": 3
                  },
                  "name": "backends",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 41,
                      "character": 22
                    },
                    "name": "PlatformLayer"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 46,
                    "character": 3
                  },
                  "name": "frontends",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 46,
                      "character": 23
                    },
                    "name": "PlatformLayer"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 51,
                    "character": 3
                  },
                  "name": "userBuild",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 51,
                      "character": 24
                    },
                    "name": "PlatformBuildFn",
                    "internalFilePath": "platform-options.ts"
                  },
                  "isOptional": true,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 56,
                    "character": 3
                  },
                  "name": "userDeploy",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 56,
                      "character": 25
                    },
                    "name": "PlatformDeployFn",
                    "internalFilePath": "platform-options.ts"
                  },
                  "isOptional": true,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "ThisTypeSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 31,
                  "character": 1
                },
                "name": "Platform"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 59,
                "character": 2
              },
              "signature": "(method) Platform.run(context: AppContext): Promise<ApplicationInstance>",
              "name": "run",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 59,
                    "character": 12
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 59,
                      "character": 21
                    },
                    "name": "AppContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 59,
                  "character": 34
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 59,
                      "character": 42
                    },
                    "name": "ApplicationInstance",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 106,
                "character": 2
              },
              "signature": "(method) Platform.runPlatformLayer(name: string, context: AppContext, platformLayer: PlatformLayer, apiGateway?: ApplicationInstance): Promise<ApplicationInstance>",
              "name": "runPlatformLayer",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 107,
                    "character": 3
                  },
                  "name": "name",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 107,
                      "character": 9
                    },
                    "name": "string"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 108,
                    "character": 3
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 108,
                      "character": 12
                    },
                    "name": "AppContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 109,
                    "character": 3
                  },
                  "name": "platformLayer",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 109,
                      "character": 18
                    },
                    "name": "PlatformLayer"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 110,
                    "character": 3
                  },
                  "name": "apiGateway",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 110,
                      "character": 16
                    },
                    "name": "ApplicationInstance",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": true,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 111,
                  "character": 5
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 111,
                      "character": 13
                    },
                    "name": "ApplicationInstance",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 222,
                "character": 2
              },
              "signature": "(method) Platform.getAppInstance(res: number | ApplicationInstance, service?: PlatformServiceModule): {\n    port?: number;\n    appName: string;\n    url?: string;\n    stop?: () => Promise<void>;\n}",
              "name": "getAppInstance",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 223,
                    "character": 3
                  },
                  "name": "res",
                  "type": {
                    "__schema": "TypeUnionSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 223,
                      "character": 8
                    },
                    "types": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "platform.ts",
                          "line": 223,
                          "character": 8
                        },
                        "name": "number"
                      },
                      {
                        "__schema": "TypeRefSchema",
                        "location": {
                          "filePath": "platform.ts",
                          "line": 223,
                          "character": 17
                        },
                        "name": "ApplicationInstance",
                        "componentId": {
                          "scope": "teambit.harmony",
                          "name": "application"
                        }
                      }
                    ]
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 224,
                    "character": 3
                  },
                  "name": "service",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 224,
                      "character": 13
                    },
                    "name": "PlatformServiceModule",
                    "internalFilePath": "platform-service.ts"
                  },
                  "isOptional": true,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 222,
                  "character": 2
                },
                "type": "{\n    port?: number;\n    appName: string;\n    url?: string;\n    stop?: () => Promise<void>;\n}"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 250,
                "character": 2
              },
              "signature": "(method) Platform.getComponent(context: AppContext, id: ComponentID): Promise<Component>",
              "name": "getComponent",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 250,
                    "character": 21
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 250,
                      "character": 30
                    },
                    "name": "AppContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 250,
                    "character": 42
                  },
                  "name": "id",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 250,
                      "character": 46
                    },
                    "name": "ComponentID",
                    "componentId": {
                      "scope": "teambit.component",
                      "name": "component-id",
                      "version": "1.2.0"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 250,
                  "character": 60
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 250,
                      "character": 68
                    },
                    "name": "Component",
                    "componentId": {
                      "scope": "teambit.component",
                      "name": "component"
                    }
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 266,
                "character": 2
              },
              "signature": "(method) Platform.loadPlatformService(serviceOpts: PlatformService, targetPort: number, context: AppContext): Promise<PlatformServiceModule>",
              "name": "loadPlatformService",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 267,
                    "character": 3
                  },
                  "name": "serviceOpts",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 267,
                      "character": 16
                    },
                    "name": "PlatformService"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 268,
                    "character": 3
                  },
                  "name": "targetPort",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 268,
                      "character": 15
                    },
                    "name": "number"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 269,
                    "character": 3
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 269,
                      "character": 12
                    },
                    "name": "AppContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 270,
                  "character": 5
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 270,
                      "character": 13
                    },
                    "name": "PlatformServiceModule",
                    "internalFilePath": "platform-service.ts"
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 446,
                "character": 2
              },
              "signature": "(method) Platform.build(context: AppBuildContext): Promise<AppBuildResult>",
              "name": "build",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 446,
                    "character": 14
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 446,
                      "character": 23
                    },
                    "name": "AppBuildContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 446,
                  "character": 2
                },
                "type": "Promise<AppBuildResult>"
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 453,
                "character": 2
              },
              "signature": "(method) Platform.deploy(context: AppDeployContext): Promise<any>",
              "name": "deploy",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 453,
                    "character": 15
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 453,
                      "character": 24
                    },
                    "name": "AppDeployContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 453,
                  "character": 2
                },
                "type": "Promise<any>"
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 460,
                "character": 2
              },
              "signature": "(method) Platform.from(options: PlatformOptions): Platform",
              "name": "from",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 460,
                    "character": 14
                  },
                  "name": "options",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 460,
                      "character": 23
                    },
                    "name": "PlatformOptions"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 460,
                  "character": 2
                },
                "name": "Platform"
              },
              "modifiers": [
                "static"
              ]
            }
          ],
          "extendsNodes": [],
          "implementNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 31,
                "character": 34
              },
              "name": "implements Application",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 31,
                  "character": 34
                },
                "name": "Application",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-4-21/1r36oiz/bitdev.platforms_platform@ec7636d9c6d45c1fd951d69fb36f2c4a31bf3998/platform.ts"
              }
            }
          ]
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 3,
          "character": 15
        },
        "name": "PlatformOptions",
        "exportNode": {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "platform-options.ts",
            "line": 9,
            "character": 1
          },
          "signature": "type PlatformOptions = {\n    name: string;\n    backends?: PlatformLayer;\n    frontends?: PlatformLayer;\n    build?(context: PlatformBuildContext): Promise<AppBuildResult>;\n    deploy?(context: PlatformBuildContext): Promise<any>;\n}",
          "name": "PlatformOptions",
          "type": {
            "__schema": "TypeLiteralSchema",
            "location": {
              "filePath": "platform-options.ts",
              "line": 9,
              "character": 31
            },
            "members": [
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-options.ts",
                  "line": 13,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 10,
                    "character": 3
                  },
                  "raw": "/**\n   * name of the platform. e.g. acme-platform, or airbnb\n   */",
                  "comment": "name of the platform. e.g. acme-platform, or airbnb"
                },
                "signature": "(property) name: string",
                "name": "name",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 13,
                    "character": 9
                  },
                  "name": "string"
                },
                "isOptional": false
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-options.ts",
                  "line": 18,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 15,
                    "character": 3
                  },
                  "raw": "/**\n   * backend services to load.\n   */",
                  "comment": "backend services to load."
                },
                "signature": "(property) backends?: PlatformLayer",
                "name": "backends",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 18,
                    "character": 3
                  },
                  "name": "PlatformLayer"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-options.ts",
                  "line": 23,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 20,
                    "character": 3
                  },
                  "raw": "/**\n   * frontend services to load.\n   */",
                  "comment": "frontend services to load."
                },
                "signature": "(property) frontends?: PlatformLayer",
                "name": "frontends",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 23,
                    "character": 3
                  },
                  "name": "PlatformLayer"
                },
                "isOptional": true
              },
              {
                "__schema": "FunctionLikeSchema",
                "location": {
                  "filePath": "platform-options.ts",
                  "line": 28,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 25,
                    "character": 3
                  },
                  "raw": "/**\n   * build function for the platform.\n   */",
                  "comment": "build function for the platform."
                },
                "signature": "(method) build?(context: PlatformBuildContext): Promise<AppBuildResult>",
                "name": "build",
                "params": [
                  {
                    "__schema": "ParameterSchema",
                    "location": {
                      "filePath": "platform-options.ts",
                      "line": 28,
                      "character": 10
                    },
                    "name": "context",
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "platform-options.ts",
                        "line": 28,
                        "character": 19
                      },
                      "name": "PlatformBuildContext"
                    },
                    "isOptional": false,
                    "isSpread": false
                  }
                ],
                "returnType": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 28,
                    "character": 42
                  },
                  "name": "Promise",
                  "typeArgs": [
                    {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "platform-options.ts",
                        "line": 28,
                        "character": 50
                      },
                      "name": "AppBuildResult",
                      "componentId": {
                        "scope": "teambit.harmony",
                        "name": "application"
                      }
                    }
                  ]
                },
                "modifiers": []
              },
              {
                "__schema": "FunctionLikeSchema",
                "location": {
                  "filePath": "platform-options.ts",
                  "line": 33,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 30,
                    "character": 3
                  },
                  "raw": "/**\n   * deploy function for the platform\n   */",
                  "comment": "deploy function for the platform"
                },
                "signature": "(method) deploy?(context: PlatformBuildContext): Promise<any>",
                "name": "deploy",
                "params": [
                  {
                    "__schema": "ParameterSchema",
                    "location": {
                      "filePath": "platform-options.ts",
                      "line": 33,
                      "character": 11
                    },
                    "name": "context",
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "platform-options.ts",
                        "line": 33,
                        "character": 20
                      },
                      "name": "PlatformBuildContext"
                    },
                    "isOptional": false,
                    "isSpread": false
                  }
                ],
                "returnType": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 33,
                    "character": 43
                  },
                  "name": "Promise",
                  "typeArgs": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "platform-options.ts",
                        "line": 33,
                        "character": 51
                      },
                      "name": "any"
                    }
                  ]
                },
                "modifiers": []
              }
            ]
          }
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 4,
          "character": 15
        },
        "name": "GatewayContext",
        "exportNode": {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "gateway-context.ts",
            "line": 7,
            "character": 1
          },
          "signature": "class GatewayContext",
          "name": "GatewayContext",
          "members": [
            {
              "__schema": "ConstructorSchema",
              "location": {
                "filePath": "gateway-context.ts",
                "line": 8,
                "character": 3
              },
              "signature": "constructor GatewayContext(appContext: AppContext, services: ApplicationInstance[], port: number, envVars: Record<string, string>): GatewayContext",
              "name": "constructor",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 9,
                    "character": 5
                  },
                  "name": "appContext",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 9,
                      "character": 26
                    },
                    "name": "AppContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 10,
                    "character": 5
                  },
                  "name": "services",
                  "type": {
                    "__schema": "TypeArraySchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 10,
                      "character": 24
                    },
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "gateway-context.ts",
                        "line": 10,
                        "character": 24
                      },
                      "name": "ApplicationInstance",
                      "componentId": {
                        "scope": "teambit.harmony",
                        "name": "application"
                      }
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 11,
                    "character": 5
                  },
                  "name": "port",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 11,
                      "character": 20
                    },
                    "name": "number"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 12,
                    "character": 5
                  },
                  "name": "envVars",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 12,
                      "character": 23
                    },
                    "name": "Record",
                    "typeArgs": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "gateway-context.ts",
                          "line": 12,
                          "character": 30
                        },
                        "name": "string"
                      },
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "gateway-context.ts",
                          "line": 12,
                          "character": 38
                        },
                        "name": "string"
                      }
                    ]
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "ThisTypeSchema",
                "location": {
                  "filePath": "gateway-context.ts",
                  "line": 7,
                  "character": 1
                },
                "name": "GatewayContext"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "gateway-context.ts",
                "line": 28,
                "character": 3
              },
              "signature": "(method) GatewayContext.from(appContext: AppContext, services?: ApplicationInstance[], port?: number, envVars?: Record<string, string>): GatewayContext",
              "name": "from",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 28,
                    "character": 15
                  },
                  "name": "appContext",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 28,
                      "character": 27
                    },
                    "name": "AppContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 28,
                    "character": 39
                  },
                  "name": "services",
                  "type": {
                    "__schema": "TypeArraySchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 28,
                      "character": 50
                    },
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "gateway-context.ts",
                        "line": 28,
                        "character": 50
                      },
                      "name": "ApplicationInstance",
                      "componentId": {
                        "scope": "teambit.harmony",
                        "name": "application"
                      }
                    }
                  },
                  "isOptional": true,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 28,
                    "character": 73
                  },
                  "name": "port",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 28,
                      "character": 80
                    },
                    "name": "number"
                  },
                  "isOptional": true,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 28,
                    "character": 88
                  },
                  "name": "envVars",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 28,
                      "character": 97
                    },
                    "name": "Record",
                    "typeArgs": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "gateway-context.ts",
                          "line": 28,
                          "character": 104
                        },
                        "name": "string"
                      },
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "gateway-context.ts",
                          "line": 28,
                          "character": 112
                        },
                        "name": "string"
                      }
                    ]
                  },
                  "isOptional": true,
                  "defaultValue": "{}",
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "gateway-context.ts",
                  "line": 28,
                  "character": 3
                },
                "name": "GatewayContext"
              },
              "modifiers": [
                "static"
              ]
            }
          ],
          "extendsNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "gateway-context.ts",
                "line": 7,
                "character": 37
              },
              "name": "extends AppContext",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "gateway-context.ts",
                  "line": 7,
                  "character": 37
                },
                "name": "AppContext",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-4-21/1r36oiz/bitdev.platforms_platform@ec7636d9c6d45c1fd951d69fb36f2c4a31bf3998/gateway-context.ts"
              }
            }
          ],
          "implementNodes": []
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 4,
          "character": 31
        },
        "name": "GatewayServer",
        "exportNode": {
          "__schema": "InterfaceSchema",
          "location": {
            "filePath": "gateway-context.ts",
            "line": 33,
            "character": 1
          },
          "signature": "interface GatewayServer",
          "name": "GatewayServer",
          "members": [
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "gateway-context.ts",
                "line": 37,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "gateway-context.ts",
                  "line": 34,
                  "character": 3
                },
                "raw": "/**\n   * run the application.\n   */",
                "comment": "run the application."
              },
              "signature": "(method) GatewayServer.run(context: GatewayContext): Promise<ApplicationInstance>",
              "name": "run",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 37,
                    "character": 7
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 37,
                      "character": 16
                    },
                    "name": "GatewayContext"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "gateway-context.ts",
                  "line": 37,
                  "character": 33
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 37,
                      "character": 41
                    },
                    "name": "ApplicationInstance",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  }
                ]
              },
              "modifiers": []
            }
          ],
          "extendsNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "gateway-context.ts",
                "line": 33,
                "character": 40
              },
              "name": "extends Application",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "gateway-context.ts",
                  "line": 33,
                  "character": 40
                },
                "name": "Application",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-4-21/1r36oiz/bitdev.platforms_platform@ec7636d9c6d45c1fd951d69fb36f2c4a31bf3998/gateway-context.ts"
              }
            }
          ]
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 5,
          "character": 15
        },
        "name": "PlatformService",
        "exportNode": {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "platform-service.ts",
            "line": 4,
            "character": 1
          },
          "signature": "type PlatformService<T extends PlatformServiceOptions = PlatformServiceOptions> = string | Promise<string> | [Promise<string>, T] | [string, T]",
          "name": "PlatformService",
          "type": {
            "__schema": "TypeUnionSchema",
            "location": {
              "filePath": "platform-service.ts",
              "line": 4,
              "character": 90
            },
            "types": [
              {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "platform-service.ts",
                  "line": 4,
                  "character": 90
                },
                "name": "string"
              },
              {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform-service.ts",
                  "line": 4,
                  "character": 97
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "platform-service.ts",
                      "line": 4,
                      "character": 105
                    },
                    "name": "string"
                  }
                ]
              },
              {
                "__schema": "TupleTypeSchema",
                "location": {
                  "filePath": "platform-service.ts",
                  "line": 4,
                  "character": 113
                },
                "elements": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform-service.ts",
                      "line": 4,
                      "character": 114
                    },
                    "name": "Promise",
                    "typeArgs": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "platform-service.ts",
                          "line": 4,
                          "character": 122
                        },
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform-service.ts",
                      "line": 4,
                      "character": 131
                    },
                    "name": "T"
                  }
                ]
              },
              {
                "__schema": "TupleTypeSchema",
                "location": {
                  "filePath": "platform-service.ts",
                  "line": 4,
                  "character": 134
                },
                "elements": [
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "platform-service.ts",
                      "line": 4,
                      "character": 135
                    },
                    "name": "string"
                  },
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform-service.ts",
                      "line": 4,
                      "character": 143
                    },
                    "name": "T"
                  }
                ]
              }
            ]
          }
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 5,
          "character": 32
        },
        "name": "PlatformServiceOptions",
        "exportNode": {
          "__schema": "InterfaceSchema",
          "location": {
            "filePath": "platform-service.ts",
            "line": 6,
            "character": 1
          },
          "signature": "interface PlatformServiceOptions",
          "name": "PlatformServiceOptions",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-service.ts",
                "line": 10,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "platform-service.ts",
                  "line": 7,
                  "character": 3
                },
                "raw": "/**\n   * name of the service.\n   */",
                "comment": "name of the service."
              },
              "signature": "(property) PlatformServiceOptions.name?: string",
              "name": "name",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "platform-service.ts",
                  "line": 10,
                  "character": 10
                },
                "name": "string"
              },
              "isOptional": true
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-service.ts",
                "line": 15,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "platform-service.ts",
                  "line": 12,
                  "character": 3
                },
                "raw": "/**\n   * use the remote url.\n   */",
                "comment": "use the remote url."
              },
              "signature": "(property) PlatformServiceOptions.remoteUrl?: string",
              "name": "remoteUrl",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "platform-service.ts",
                  "line": 15,
                  "character": 15
                },
                "name": "string"
              },
              "isOptional": true
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-service.ts",
                "line": 20,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "platform-service.ts",
                  "line": 17,
                  "character": 3
                },
                "raw": "/**\n   * force the use of the remote url.\n   */",
                "comment": "force the use of the remote url."
              },
              "signature": "(property) PlatformServiceOptions.forceRemote?: boolean",
              "name": "forceRemote",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "platform-service.ts",
                  "line": 20,
                  "character": 17
                },
                "name": "boolean"
              },
              "isOptional": true
            }
          ],
          "extendsNodes": []
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 6,
          "character": 15
        },
        "name": "PlatformLayer",
        "exportNode": {
          "__schema": "InterfaceSchema",
          "location": {
            "filePath": "platform-layer.ts",
            "line": 3,
            "character": 1
          },
          "signature": "interface PlatformLayer",
          "name": "PlatformLayer",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-layer.ts",
                "line": 7,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "platform-layer.ts",
                  "line": 4,
                  "character": 3
                },
                "raw": "/**\n   * used as a gateway or when a single server is needed.\n   */",
                "comment": "used as a gateway or when a single server is needed."
              },
              "signature": "(property) PlatformLayer.main: PlatformService",
              "name": "main",
              "type": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform-layer.ts",
                  "line": 7,
                  "character": 3
                },
                "name": "PlatformService"
              },
              "isOptional": false
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-layer.ts",
                "line": 12,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "platform-layer.ts",
                  "line": 9,
                  "character": 3
                },
                "raw": "/**\n   * services application\n   */",
                "comment": "services application"
              },
              "signature": "(property) PlatformLayer.services?: PlatformService[]",
              "name": "services",
              "type": {
                "__schema": "TypeArraySchema",
                "location": {
                  "filePath": "platform-layer.ts",
                  "line": 12,
                  "character": 14
                },
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-layer.ts",
                    "line": 12,
                    "character": 14
                  },
                  "name": "PlatformService"
                }
              },
              "isOptional": true
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-layer.ts",
                "line": 17,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "platform-layer.ts",
                  "line": 14,
                  "character": 3
                },
                "raw": "/**\n   * port range to use for services.\n   */",
                "comment": "port range to use for services."
              },
              "signature": "(property) PlatformLayer.portRange?: [number, number]",
              "name": "portRange",
              "type": {
                "__schema": "TupleTypeSchema",
                "location": {
                  "filePath": "platform-layer.ts",
                  "line": 17,
                  "character": 15
                },
                "elements": [
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "platform-layer.ts",
                      "line": 17,
                      "character": 16
                    },
                    "name": "number"
                  },
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "platform-layer.ts",
                      "line": 17,
                      "character": 24
                    },
                    "name": "number"
                  }
                ]
              },
              "isOptional": true
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-layer.ts",
                "line": 23,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "platform-layer.ts",
                  "line": 19,
                  "character": 3
                },
                "raw": "/**\n   * port range for the gateway.\n   * by default uses the same port range as services.\n   */",
                "comment": "port range for the gateway.\nby default uses the same port range as services."
              },
              "signature": "(property) PlatformLayer.mainPortRange?: [number, number]",
              "name": "mainPortRange",
              "type": {
                "__schema": "TupleTypeSchema",
                "location": {
                  "filePath": "platform-layer.ts",
                  "line": 23,
                  "character": 19
                },
                "elements": [
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "platform-layer.ts",
                      "line": 23,
                      "character": 20
                    },
                    "name": "number"
                  },
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "platform-layer.ts",
                      "line": 23,
                      "character": 28
                    },
                    "name": "number"
                  }
                ]
              },
              "isOptional": true
            }
          ],
          "extendsNodes": []
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 7,
          "character": 15
        },
        "name": "PlatformBuildContext",
        "exportNode": {
          "__schema": "InterfaceSchema",
          "location": {
            "filePath": "platform-build-context.ts",
            "line": 38,
            "character": 1
          },
          "signature": "interface PlatformBuildContext",
          "name": "PlatformBuildContext",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-build-context.ts",
                "line": 42,
                "character": 2
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 39,
                  "character": 2
                },
                "raw": "/**\n\t * platform service components build information.\n\t */",
                "comment": "platform service components build information."
              },
              "signature": "(property) PlatformBuildContext.platformServices: PlatformServiceBuild[]",
              "name": "platformServices",
              "type": {
                "__schema": "TypeArraySchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 42,
                  "character": 20
                },
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 42,
                    "character": 20
                  },
                  "name": "PlatformServiceBuild"
                }
              },
              "isOptional": false
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-build-context.ts",
                "line": 44,
                "character": 2
              },
              "signature": "(property) PlatformBuildContext.mainFrontend: PlatformServiceBuild",
              "name": "mainFrontend",
              "type": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 44,
                  "character": 2
                },
                "name": "PlatformServiceBuild"
              },
              "isOptional": false
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-build-context.ts",
                "line": 46,
                "character": 2
              },
              "signature": "(property) PlatformBuildContext.mainBackend: PlatformServiceBuild",
              "name": "mainBackend",
              "type": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 46,
                  "character": 2
                },
                "name": "PlatformServiceBuild"
              },
              "isOptional": false
            }
          ],
          "extendsNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "platform-build-context.ts",
                "line": 38,
                "character": 47
              },
              "name": "extends AppBuildContext",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 38,
                  "character": 47
                },
                "name": "AppBuildContext",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-4-21/1r36oiz/bitdev.platforms_platform@ec7636d9c6d45c1fd951d69fb36f2c4a31bf3998/platform-build-context.ts"
              }
            }
          ]
        }
      },
      {
        "__schema": "ExportSchema",
        "location": {
          "filePath": "index.ts",
          "line": 7,
          "character": 37
        },
        "name": "PlatformServiceBuild",
        "exportNode": {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "platform-build-context.ts",
            "line": 6,
            "character": 1
          },
          "signature": "type PlatformServiceBuild = {\n    type?: string;\n    componentId?: ComponentID;\n    artifacts?: ArtifactDefinition[];\n    component?: Component;\n    name: string;\n    url?: string;\n}",
          "name": "PlatformServiceBuild",
          "type": {
            "__schema": "TypeLiteralSchema",
            "location": {
              "filePath": "platform-build-context.ts",
              "line": 6,
              "character": 36
            },
            "members": [
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 10,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 7,
                    "character": 2
                  },
                  "raw": "/**\n\t * frontend, backend or another layer.\n\t */",
                  "comment": "frontend, backend or another layer."
                },
                "signature": "(property) type?: string",
                "name": "type",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 10,
                    "character": 9
                  },
                  "name": "string"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 15,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 12,
                    "character": 2
                  },
                  "raw": "/**\n\t * ID of the platform component.\n\t */",
                  "comment": "ID of the platform component."
                },
                "signature": "(property) componentId?: ComponentID",
                "name": "componentId",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 15,
                    "character": 2
                  },
                  "name": "ComponentID",
                  "componentId": {
                    "scope": "teambit.component",
                    "name": "component-id",
                    "version": "1.2.0"
                  }
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 20,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 17,
                    "character": 2
                  },
                  "raw": "/**\n\t * list of artifacts.\n\t */",
                  "comment": "list of artifacts."
                },
                "signature": "(property) artifacts?: ArtifactDefinition[]",
                "name": "artifacts",
                "type": {
                  "__schema": "TypeArraySchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 20,
                    "character": 14
                  },
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform-build-context.ts",
                      "line": 20,
                      "character": 14
                    },
                    "name": "ArtifactDefinition",
                    "componentId": {
                      "scope": "teambit.pipelines",
                      "name": "builder"
                    }
                  }
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 25,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 22,
                    "character": 2
                  },
                  "raw": "/**\n\t * platform component object.\n\t */",
                  "comment": "platform component object."
                },
                "signature": "(property) component?: Component",
                "name": "component",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 25,
                    "character": 2
                  },
                  "name": "Component",
                  "componentId": {
                    "scope": "teambit.component",
                    "name": "component"
                  }
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 30,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 27,
                    "character": 2
                  },
                  "raw": "/**\n\t * name of the application.\n\t */",
                  "comment": "name of the application."
                },
                "signature": "(property) name: string",
                "name": "name",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 30,
                    "character": 8
                  },
                  "name": "string"
                },
                "isOptional": false
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 35,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 32,
                    "character": 2
                  },
                  "raw": "/**\n\t * remote URL of the application.\n\t */",
                  "comment": "remote URL of the application."
                },
                "signature": "(property) url?: string",
                "name": "url",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 35,
                    "character": 8
                  },
                  "name": "string"
                },
                "isOptional": true
              }
            ]
          }
        }
      }
    ],
    "internals": []
  },
  "internals": [
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "platform.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "platform.ts",
            "line": 31,
            "character": 1
          },
          "signature": "class Platform",
          "name": "Platform",
          "members": [
            {
              "__schema": "ConstructorSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 32,
                "character": 2
              },
              "signature": "constructor Platform(name: string, backends: PlatformLayer, frontends: PlatformLayer, userBuild?: PlatformBuildFn, userDeploy?: PlatformDeployFn): Platform",
              "name": "constructor",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 36,
                    "character": 3
                  },
                  "name": "name",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 36,
                      "character": 18
                    },
                    "name": "string"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 41,
                    "character": 3
                  },
                  "name": "backends",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 41,
                      "character": 22
                    },
                    "name": "PlatformLayer"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 46,
                    "character": 3
                  },
                  "name": "frontends",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 46,
                      "character": 23
                    },
                    "name": "PlatformLayer"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 51,
                    "character": 3
                  },
                  "name": "userBuild",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 51,
                      "character": 24
                    },
                    "name": "PlatformBuildFn",
                    "internalFilePath": "platform-options.ts"
                  },
                  "isOptional": true,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 56,
                    "character": 3
                  },
                  "name": "userDeploy",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 56,
                      "character": 25
                    },
                    "name": "PlatformDeployFn",
                    "internalFilePath": "platform-options.ts"
                  },
                  "isOptional": true,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "ThisTypeSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 31,
                  "character": 1
                },
                "name": "Platform"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 59,
                "character": 2
              },
              "signature": "(method) Platform.run(context: AppContext): Promise<ApplicationInstance>",
              "name": "run",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 59,
                    "character": 12
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 59,
                      "character": 21
                    },
                    "name": "AppContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 59,
                  "character": 34
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 59,
                      "character": 42
                    },
                    "name": "ApplicationInstance",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 106,
                "character": 2
              },
              "signature": "(method) Platform.runPlatformLayer(name: string, context: AppContext, platformLayer: PlatformLayer, apiGateway?: ApplicationInstance): Promise<ApplicationInstance>",
              "name": "runPlatformLayer",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 107,
                    "character": 3
                  },
                  "name": "name",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 107,
                      "character": 9
                    },
                    "name": "string"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 108,
                    "character": 3
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 108,
                      "character": 12
                    },
                    "name": "AppContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 109,
                    "character": 3
                  },
                  "name": "platformLayer",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 109,
                      "character": 18
                    },
                    "name": "PlatformLayer"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 110,
                    "character": 3
                  },
                  "name": "apiGateway",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 110,
                      "character": 16
                    },
                    "name": "ApplicationInstance",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": true,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 111,
                  "character": 5
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 111,
                      "character": 13
                    },
                    "name": "ApplicationInstance",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 222,
                "character": 2
              },
              "signature": "(method) Platform.getAppInstance(res: number | ApplicationInstance, service?: PlatformServiceModule): {\n    port?: number;\n    appName: string;\n    url?: string;\n    stop?: () => Promise<void>;\n}",
              "name": "getAppInstance",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 223,
                    "character": 3
                  },
                  "name": "res",
                  "type": {
                    "__schema": "TypeUnionSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 223,
                      "character": 8
                    },
                    "types": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "platform.ts",
                          "line": 223,
                          "character": 8
                        },
                        "name": "number"
                      },
                      {
                        "__schema": "TypeRefSchema",
                        "location": {
                          "filePath": "platform.ts",
                          "line": 223,
                          "character": 17
                        },
                        "name": "ApplicationInstance",
                        "componentId": {
                          "scope": "teambit.harmony",
                          "name": "application"
                        }
                      }
                    ]
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 224,
                    "character": 3
                  },
                  "name": "service",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 224,
                      "character": 13
                    },
                    "name": "PlatformServiceModule",
                    "internalFilePath": "platform-service.ts"
                  },
                  "isOptional": true,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 222,
                  "character": 2
                },
                "type": "{\n    port?: number;\n    appName: string;\n    url?: string;\n    stop?: () => Promise<void>;\n}"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 250,
                "character": 2
              },
              "signature": "(method) Platform.getComponent(context: AppContext, id: ComponentID): Promise<Component>",
              "name": "getComponent",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 250,
                    "character": 21
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 250,
                      "character": 30
                    },
                    "name": "AppContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 250,
                    "character": 42
                  },
                  "name": "id",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 250,
                      "character": 46
                    },
                    "name": "ComponentID",
                    "componentId": {
                      "scope": "teambit.component",
                      "name": "component-id",
                      "version": "1.2.0"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 250,
                  "character": 60
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 250,
                      "character": 68
                    },
                    "name": "Component",
                    "componentId": {
                      "scope": "teambit.component",
                      "name": "component"
                    }
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 266,
                "character": 2
              },
              "signature": "(method) Platform.loadPlatformService(serviceOpts: PlatformService, targetPort: number, context: AppContext): Promise<PlatformServiceModule>",
              "name": "loadPlatformService",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 267,
                    "character": 3
                  },
                  "name": "serviceOpts",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 267,
                      "character": 16
                    },
                    "name": "PlatformService"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 268,
                    "character": 3
                  },
                  "name": "targetPort",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 268,
                      "character": 15
                    },
                    "name": "number"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 269,
                    "character": 3
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 269,
                      "character": 12
                    },
                    "name": "AppContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 270,
                  "character": 5
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 270,
                      "character": 13
                    },
                    "name": "PlatformServiceModule",
                    "internalFilePath": "platform-service.ts"
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 446,
                "character": 2
              },
              "signature": "(method) Platform.build(context: AppBuildContext): Promise<AppBuildResult>",
              "name": "build",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 446,
                    "character": 14
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 446,
                      "character": 23
                    },
                    "name": "AppBuildContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 446,
                  "character": 2
                },
                "type": "Promise<AppBuildResult>"
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 453,
                "character": 2
              },
              "signature": "(method) Platform.deploy(context: AppDeployContext): Promise<any>",
              "name": "deploy",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 453,
                    "character": 15
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 453,
                      "character": 24
                    },
                    "name": "AppDeployContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 453,
                  "character": 2
                },
                "type": "Promise<any>"
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 460,
                "character": 2
              },
              "signature": "(method) Platform.from(options: PlatformOptions): Platform",
              "name": "from",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "platform.ts",
                    "line": 460,
                    "character": 14
                  },
                  "name": "options",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform.ts",
                      "line": 460,
                      "character": 23
                    },
                    "name": "PlatformOptions"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 460,
                  "character": 2
                },
                "name": "Platform"
              },
              "modifiers": [
                "static"
              ]
            }
          ],
          "extendsNodes": [],
          "implementNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "platform.ts",
                "line": 31,
                "character": 34
              },
              "name": "implements Application",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform.ts",
                  "line": 31,
                  "character": 34
                },
                "name": "Application",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-4-21/1r36oiz/bitdev.platforms_platform@ec7636d9c6d45c1fd951d69fb36f2c4a31bf3998/platform.ts"
              }
            }
          ]
        }
      ],
      "internals": []
    },
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "platform-options.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "platform-options.ts",
            "line": 5,
            "character": 1
          },
          "signature": "type PlatformBuildFn = (context: PlatformBuildContext) => Promise<AppBuildResult>",
          "name": "PlatformBuildFn",
          "type": {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "platform-options.ts",
              "line": 5,
              "character": 31
            },
            "signature": "(context: PlatformBuildContext): Promise<\u001b[2m(component: teambit.harmony/application)\u001b[22m AppBuildResult>",
            "name": "",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "platform-options.ts",
                  "line": 5,
                  "character": 32
                },
                "name": "context",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 5,
                    "character": 41
                  },
                  "name": "PlatformBuildContext"
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "platform-options.ts",
                "line": 5,
                "character": 66
              },
              "name": "Promise",
              "typeArgs": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 5,
                    "character": 74
                  },
                  "name": "AppBuildResult",
                  "componentId": {
                    "scope": "teambit.harmony",
                    "name": "application"
                  }
                }
              ]
            },
            "modifiers": []
          }
        },
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "platform-options.ts",
            "line": 7,
            "character": 1
          },
          "signature": "type PlatformDeployFn = (context: PlatformBuildContext) => Promise<any>",
          "name": "PlatformDeployFn",
          "type": {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "platform-options.ts",
              "line": 7,
              "character": 32
            },
            "signature": "(context: PlatformBuildContext): Promise<any>",
            "name": "",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "platform-options.ts",
                  "line": 7,
                  "character": 33
                },
                "name": "context",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 7,
                    "character": 42
                  },
                  "name": "PlatformBuildContext"
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "platform-options.ts",
                "line": 7,
                "character": 67
              },
              "name": "Promise",
              "typeArgs": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 7,
                    "character": 75
                  },
                  "name": "any"
                }
              ]
            },
            "modifiers": []
          }
        },
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "platform-options.ts",
            "line": 9,
            "character": 1
          },
          "signature": "type PlatformOptions = {\n    name: string;\n    backends?: PlatformLayer;\n    frontends?: PlatformLayer;\n    build?(context: PlatformBuildContext): Promise<AppBuildResult>;\n    deploy?(context: PlatformBuildContext): Promise<any>;\n}",
          "name": "PlatformOptions",
          "type": {
            "__schema": "TypeLiteralSchema",
            "location": {
              "filePath": "platform-options.ts",
              "line": 9,
              "character": 31
            },
            "members": [
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-options.ts",
                  "line": 13,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 10,
                    "character": 3
                  },
                  "raw": "/**\n   * name of the platform. e.g. acme-platform, or airbnb\n   */",
                  "comment": "name of the platform. e.g. acme-platform, or airbnb"
                },
                "signature": "(property) name: string",
                "name": "name",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 13,
                    "character": 9
                  },
                  "name": "string"
                },
                "isOptional": false
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-options.ts",
                  "line": 18,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 15,
                    "character": 3
                  },
                  "raw": "/**\n   * backend services to load.\n   */",
                  "comment": "backend services to load."
                },
                "signature": "(property) backends?: PlatformLayer",
                "name": "backends",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 18,
                    "character": 3
                  },
                  "name": "PlatformLayer"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-options.ts",
                  "line": 23,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 20,
                    "character": 3
                  },
                  "raw": "/**\n   * frontend services to load.\n   */",
                  "comment": "frontend services to load."
                },
                "signature": "(property) frontends?: PlatformLayer",
                "name": "frontends",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 23,
                    "character": 3
                  },
                  "name": "PlatformLayer"
                },
                "isOptional": true
              },
              {
                "__schema": "FunctionLikeSchema",
                "location": {
                  "filePath": "platform-options.ts",
                  "line": 28,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 25,
                    "character": 3
                  },
                  "raw": "/**\n   * build function for the platform.\n   */",
                  "comment": "build function for the platform."
                },
                "signature": "(method) build?(context: PlatformBuildContext): Promise<AppBuildResult>",
                "name": "build",
                "params": [
                  {
                    "__schema": "ParameterSchema",
                    "location": {
                      "filePath": "platform-options.ts",
                      "line": 28,
                      "character": 10
                    },
                    "name": "context",
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "platform-options.ts",
                        "line": 28,
                        "character": 19
                      },
                      "name": "PlatformBuildContext"
                    },
                    "isOptional": false,
                    "isSpread": false
                  }
                ],
                "returnType": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 28,
                    "character": 42
                  },
                  "name": "Promise",
                  "typeArgs": [
                    {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "platform-options.ts",
                        "line": 28,
                        "character": 50
                      },
                      "name": "AppBuildResult",
                      "componentId": {
                        "scope": "teambit.harmony",
                        "name": "application"
                      }
                    }
                  ]
                },
                "modifiers": []
              },
              {
                "__schema": "FunctionLikeSchema",
                "location": {
                  "filePath": "platform-options.ts",
                  "line": 33,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 30,
                    "character": 3
                  },
                  "raw": "/**\n   * deploy function for the platform\n   */",
                  "comment": "deploy function for the platform"
                },
                "signature": "(method) deploy?(context: PlatformBuildContext): Promise<any>",
                "name": "deploy",
                "params": [
                  {
                    "__schema": "ParameterSchema",
                    "location": {
                      "filePath": "platform-options.ts",
                      "line": 33,
                      "character": 11
                    },
                    "name": "context",
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "platform-options.ts",
                        "line": 33,
                        "character": 20
                      },
                      "name": "PlatformBuildContext"
                    },
                    "isOptional": false,
                    "isSpread": false
                  }
                ],
                "returnType": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-options.ts",
                    "line": 33,
                    "character": 43
                  },
                  "name": "Promise",
                  "typeArgs": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "platform-options.ts",
                        "line": 33,
                        "character": 51
                      },
                      "name": "any"
                    }
                  ]
                },
                "modifiers": []
              }
            ]
          }
        }
      ],
      "internals": []
    },
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "gateway-context.ts",
        "line": 2,
        "character": 1
      },
      "exports": [
        {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "gateway-context.ts",
            "line": 7,
            "character": 1
          },
          "signature": "class GatewayContext",
          "name": "GatewayContext",
          "members": [
            {
              "__schema": "ConstructorSchema",
              "location": {
                "filePath": "gateway-context.ts",
                "line": 8,
                "character": 3
              },
              "signature": "constructor GatewayContext(appContext: AppContext, services: ApplicationInstance[], port: number, envVars: Record<string, string>): GatewayContext",
              "name": "constructor",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 9,
                    "character": 5
                  },
                  "name": "appContext",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 9,
                      "character": 26
                    },
                    "name": "AppContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 10,
                    "character": 5
                  },
                  "name": "services",
                  "type": {
                    "__schema": "TypeArraySchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 10,
                      "character": 24
                    },
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "gateway-context.ts",
                        "line": 10,
                        "character": 24
                      },
                      "name": "ApplicationInstance",
                      "componentId": {
                        "scope": "teambit.harmony",
                        "name": "application"
                      }
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 11,
                    "character": 5
                  },
                  "name": "port",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 11,
                      "character": 20
                    },
                    "name": "number"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 12,
                    "character": 5
                  },
                  "name": "envVars",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 12,
                      "character": 23
                    },
                    "name": "Record",
                    "typeArgs": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "gateway-context.ts",
                          "line": 12,
                          "character": 30
                        },
                        "name": "string"
                      },
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "gateway-context.ts",
                          "line": 12,
                          "character": 38
                        },
                        "name": "string"
                      }
                    ]
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "ThisTypeSchema",
                "location": {
                  "filePath": "gateway-context.ts",
                  "line": 7,
                  "character": 1
                },
                "name": "GatewayContext"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "gateway-context.ts",
                "line": 28,
                "character": 3
              },
              "signature": "(method) GatewayContext.from(appContext: AppContext, services?: ApplicationInstance[], port?: number, envVars?: Record<string, string>): GatewayContext",
              "name": "from",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 28,
                    "character": 15
                  },
                  "name": "appContext",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 28,
                      "character": 27
                    },
                    "name": "AppContext",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 28,
                    "character": 39
                  },
                  "name": "services",
                  "type": {
                    "__schema": "TypeArraySchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 28,
                      "character": 50
                    },
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "gateway-context.ts",
                        "line": 28,
                        "character": 50
                      },
                      "name": "ApplicationInstance",
                      "componentId": {
                        "scope": "teambit.harmony",
                        "name": "application"
                      }
                    }
                  },
                  "isOptional": true,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 28,
                    "character": 73
                  },
                  "name": "port",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 28,
                      "character": 80
                    },
                    "name": "number"
                  },
                  "isOptional": true,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 28,
                    "character": 88
                  },
                  "name": "envVars",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 28,
                      "character": 97
                    },
                    "name": "Record",
                    "typeArgs": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "gateway-context.ts",
                          "line": 28,
                          "character": 104
                        },
                        "name": "string"
                      },
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "gateway-context.ts",
                          "line": 28,
                          "character": 112
                        },
                        "name": "string"
                      }
                    ]
                  },
                  "isOptional": true,
                  "defaultValue": "{}",
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "gateway-context.ts",
                  "line": 28,
                  "character": 3
                },
                "name": "GatewayContext"
              },
              "modifiers": [
                "static"
              ]
            }
          ],
          "extendsNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "gateway-context.ts",
                "line": 7,
                "character": 37
              },
              "name": "extends AppContext",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "gateway-context.ts",
                  "line": 7,
                  "character": 37
                },
                "name": "AppContext",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-4-21/1r36oiz/bitdev.platforms_platform@ec7636d9c6d45c1fd951d69fb36f2c4a31bf3998/gateway-context.ts"
              }
            }
          ],
          "implementNodes": []
        },
        {
          "__schema": "InterfaceSchema",
          "location": {
            "filePath": "gateway-context.ts",
            "line": 33,
            "character": 1
          },
          "signature": "interface GatewayServer",
          "name": "GatewayServer",
          "members": [
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "gateway-context.ts",
                "line": 37,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "gateway-context.ts",
                  "line": 34,
                  "character": 3
                },
                "raw": "/**\n   * run the application.\n   */",
                "comment": "run the application."
              },
              "signature": "(method) GatewayServer.run(context: GatewayContext): Promise<ApplicationInstance>",
              "name": "run",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "gateway-context.ts",
                    "line": 37,
                    "character": 7
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 37,
                      "character": 16
                    },
                    "name": "GatewayContext"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "gateway-context.ts",
                  "line": 37,
                  "character": 33
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "gateway-context.ts",
                      "line": 37,
                      "character": 41
                    },
                    "name": "ApplicationInstance",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "application"
                    }
                  }
                ]
              },
              "modifiers": []
            }
          ],
          "extendsNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "gateway-context.ts",
                "line": 33,
                "character": 40
              },
              "name": "extends Application",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "gateway-context.ts",
                  "line": 33,
                  "character": 40
                },
                "name": "Application",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-4-21/1r36oiz/bitdev.platforms_platform@ec7636d9c6d45c1fd951d69fb36f2c4a31bf3998/gateway-context.ts"
              }
            }
          ]
        }
      ],
      "internals": [
        {
          "__schema": "UnImplementedSchema",
          "location": {
            "filePath": "gateway-context.ts",
            "line": 31,
            "character": 2
          },
          "name": ";",
          "type": "EmptyStatement"
        }
      ]
    },
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "platform-build-context.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "platform-build-context.ts",
            "line": 6,
            "character": 1
          },
          "signature": "type PlatformServiceBuild = {\n    type?: string;\n    componentId?: ComponentID;\n    artifacts?: ArtifactDefinition[];\n    component?: Component;\n    name: string;\n    url?: string;\n}",
          "name": "PlatformServiceBuild",
          "type": {
            "__schema": "TypeLiteralSchema",
            "location": {
              "filePath": "platform-build-context.ts",
              "line": 6,
              "character": 36
            },
            "members": [
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 10,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 7,
                    "character": 2
                  },
                  "raw": "/**\n\t * frontend, backend or another layer.\n\t */",
                  "comment": "frontend, backend or another layer."
                },
                "signature": "(property) type?: string",
                "name": "type",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 10,
                    "character": 9
                  },
                  "name": "string"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 15,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 12,
                    "character": 2
                  },
                  "raw": "/**\n\t * ID of the platform component.\n\t */",
                  "comment": "ID of the platform component."
                },
                "signature": "(property) componentId?: ComponentID",
                "name": "componentId",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 15,
                    "character": 2
                  },
                  "name": "ComponentID",
                  "componentId": {
                    "scope": "teambit.component",
                    "name": "component-id",
                    "version": "1.2.0"
                  }
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 20,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 17,
                    "character": 2
                  },
                  "raw": "/**\n\t * list of artifacts.\n\t */",
                  "comment": "list of artifacts."
                },
                "signature": "(property) artifacts?: ArtifactDefinition[]",
                "name": "artifacts",
                "type": {
                  "__schema": "TypeArraySchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 20,
                    "character": 14
                  },
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "platform-build-context.ts",
                      "line": 20,
                      "character": 14
                    },
                    "name": "ArtifactDefinition",
                    "componentId": {
                      "scope": "teambit.pipelines",
                      "name": "builder"
                    }
                  }
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 25,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 22,
                    "character": 2
                  },
                  "raw": "/**\n\t * platform component object.\n\t */",
                  "comment": "platform component object."
                },
                "signature": "(property) component?: Component",
                "name": "component",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 25,
                    "character": 2
                  },
                  "name": "Component",
                  "componentId": {
                    "scope": "teambit.component",
                    "name": "component"
                  }
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 30,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 27,
                    "character": 2
                  },
                  "raw": "/**\n\t * name of the application.\n\t */",
                  "comment": "name of the application."
                },
                "signature": "(property) name: string",
                "name": "name",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 30,
                    "character": 8
                  },
                  "name": "string"
                },
                "isOptional": false
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 35,
                  "character": 2
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 32,
                    "character": 2
                  },
                  "raw": "/**\n\t * remote URL of the application.\n\t */",
                  "comment": "remote URL of the application."
                },
                "signature": "(property) url?: string",
                "name": "url",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 35,
                    "character": 8
                  },
                  "name": "string"
                },
                "isOptional": true
              }
            ]
          }
        },
        {
          "__schema": "InterfaceSchema",
          "location": {
            "filePath": "platform-build-context.ts",
            "line": 38,
            "character": 1
          },
          "signature": "interface PlatformBuildContext",
          "name": "PlatformBuildContext",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-build-context.ts",
                "line": 42,
                "character": 2
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 39,
                  "character": 2
                },
                "raw": "/**\n\t * platform service components build information.\n\t */",
                "comment": "platform service components build information."
              },
              "signature": "(property) PlatformBuildContext.platformServices: PlatformServiceBuild[]",
              "name": "platformServices",
              "type": {
                "__schema": "TypeArraySchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 42,
                  "character": 20
                },
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "platform-build-context.ts",
                    "line": 42,
                    "character": 20
                  },
                  "name": "PlatformServiceBuild"
                }
              },
              "isOptional": false
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-build-context.ts",
                "line": 44,
                "character": 2
              },
              "signature": "(property) PlatformBuildContext.mainFrontend: PlatformServiceBuild",
              "name": "mainFrontend",
              "type": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 44,
                  "character": 2
                },
                "name": "PlatformServiceBuild"
              },
              "isOptional": false
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "platform-build-context.ts",
                "line": 46,
                "character": 2
              },
              "signature": "(property) PlatformBuildContext.mainBackend: PlatformServiceBuild",
              "name": "mainBackend",
              "type": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 46,
                  "character": 2
                },
                "name": "PlatformServiceBuild"
              },
              "isOptional": false
            }
          ],
          "extendsNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "platform-build-context.ts",
                "line": 38,
                "character": 47
              },
              "name": "extends AppBuildContext",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "platform-build-context.ts",
                  "line": 38,
                  "character": 47
                },
                "name": "AppBuildContext",
                "packageName": "/tmp/capsules-root/sign-capsules/2024-4-21/1r36oiz/bitdev.platforms_platform@ec7636d9c6d45c1fd951d69fb36f2c4a31bf3998/platform-build-context.ts"
              }
            }
          ]
        }
      ],
      "internals": []
    }
  ],
  "componentId": {
    "scope": "bitdev.platforms",
    "name": "platform",
    "version": "ec7636d9c6d45c1fd951d69fb36f2c4a31bf3998"
  },
  "taggedModuleExports": []
}