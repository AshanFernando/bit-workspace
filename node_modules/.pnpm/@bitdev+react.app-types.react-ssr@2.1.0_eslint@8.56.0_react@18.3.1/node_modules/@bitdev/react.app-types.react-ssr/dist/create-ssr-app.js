import express from 'express';
import webpackDevMiddleware from 'webpack-dev-middleware';
import webpackHotMiddleware from 'webpack-hot-middleware';
import { createRequire } from "node:module";
import { generateHtmlTemplate } from './generate-html.js';
const require = createRequire(import.meta.url);
function requireUncached(module) {
    delete require.cache[require.resolve(module)];
    // eslint-disable-next-line import/no-dynamic-require, global-require
    return require(module);
}
export function createSsrApp(compilers, options) {
    const app = express();
    compilers.forEach((compiler) => {
        app.use(webpackDevMiddleware(compiler, {
            publicPath: options.outputPath,
            serverSideRender: true,
            writeToDisk: (filepath) => {
                return !filepath.includes('.hot-update.js');
            },
        }));
        app.use(webpackHotMiddleware(compiler));
    });
    app.use('*', async (req, res) => {
        try {
            const serverModule = requireUncached(options.app);
            const htmlTemplate = await generateHtmlTemplate({
                publicDir: options.publicDir,
                publicPath: options.publicPath,
                indexHtmlPath: options.indexHtmlPath,
            });
            const render = serverModule?.render || serverModule.default;
            const loadScripts = serverModule?.loadScripts;
            if (!render)
                throw new Error('implement a `render` method for the dev server to run, or turn `ssr: false` in your `bit-app` file');
            const appHtml = await render({ path: req.url, req, cookie: req.header('Cookie'), res });
            const body = typeof appHtml === 'string' ? appHtml : appHtml?.html;
            const scripts = loadScripts ? await loadScripts() : undefined;
            const htmlWithBody = htmlTemplate.replace(`<!--ssr-outlet-->`, body);
            const html = scripts
                ? htmlWithBody.replace('<!--ssr-head-outlet-->', scripts)
                : htmlWithBody.replace('<!--ssr-head-outlet-->', appHtml?.script || '');
            res.send(html);
        }
        catch (err) {
            console.error(err);
            res.send(err?.toString());
        }
    });
    return app;
}
//# sourceMappingURL=create-ssr-app.js.map