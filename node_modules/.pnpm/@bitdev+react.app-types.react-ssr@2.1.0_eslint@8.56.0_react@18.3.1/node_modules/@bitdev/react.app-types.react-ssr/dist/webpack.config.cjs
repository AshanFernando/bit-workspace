"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
// const { compact } = require('lodash');
const ReactRefreshWebpackPlugin = require('@pmmmwh/react-refresh-webpack-plugin');
const WebpackAssetsManifest = require('webpack-assets-manifest');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
const { compact } = require('lodash');
const rules = require('./webpack.rules.cjs');
require('webpack-hot-middleware');
module.exports = (options) => {
    const htmlPlugin = options.htmlPath
        ? new HtmlWebpackPlugin({
            template: options.htmlPath
        })
        : undefined;
    return {
        name: 'client',
        mode: 'development',
        devtool: 'source-map',
        entry: [
            // `webpack-hot-middleware/client?path=http://localhost:${options.port}/__webpack_hmr`,
            require.resolve('webpack-hot-middleware/client'),
            ...options.entries,
        ],
        target: 'web',
        output: {
            path: options.outputPath,
            publicPath: options.publicPath,
            filename: options.filename || 'bundle.js'
        },
        devServer: {
            historyApiFallback: true,
        },
        plugins: compact([
            htmlPlugin,
            new WebpackAssetsManifest(),
            new webpack.DefinePlugin({
                'process.env': JSON.stringify(options.envVars)
            }),
            new MiniCssExtractPlugin({
                // Options similar to the same options in webpackOptions.output
                // both options are optional
                filename: '[name].css',
                chunkFilename: '[name].css',
            }),
            new webpack.HotModuleReplacementPlugin(),
            new ReactRefreshWebpackPlugin({
                overlay: {
                    sockIntegration: 'whm',
                },
                include: 'a^'
            }),
        ]),
        module: {
            // rules
            rules
        },
        // Turn off performance processing because we utilize
        // our own hints via the FileSizeReporter
        performance: false,
    };
};
//# sourceMappingURL=webpack.config.cjs.map