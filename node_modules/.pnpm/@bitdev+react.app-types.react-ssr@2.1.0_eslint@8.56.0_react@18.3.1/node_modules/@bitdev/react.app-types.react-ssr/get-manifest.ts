import { join } from 'path';
import { createRequire } from "node:module";

export class AssetManifest {
  constructor(private assetManifest: Record<string, string>) {}

  getStylesheets() {
    const values = Object.values(this.assetManifest);

    return values.filter((fileName) => {
      return fileName.endsWith('.css');
    });
  }

  getScripts() {
    const values = Object.values(this.assetManifest);

    return values.filter((fileName) => {
      return fileName.endsWith('.js');
    });
  }

  getStylesheetsString(publicPath: string = '') {
    const stylesheets = this.getStylesheets();
    return stylesheets
      .map((stylesheet) => {
        return `<link href="${publicPath}${stylesheet}" rel="stylesheet">`;
      })
      .join('\n');
  }

  getTags(publicPath: string = ''): {
    scripts: string;
    stylesheets: string;
  } {
    const scriptUrls = this.getScripts();
    const stylesheets = this.getStylesheetsString(publicPath);
    const scriptTags = scriptUrls
      .map((scriptPath) => {
        return `<script async type="module" src="${publicPath}${scriptPath}" defer></script>`;
      })
      .join('\n');

    return {
      scripts: scriptTags,
      stylesheets,
    };
  }

  static async fromPath(path: string, manifestName: string = 'assets-manifest.json') {
    const filepath = join(path, manifestName);
    const require = createRequire(import.meta.url);
    // eslint-disable-next-line import/no-dynamic-require, global-require
    const manifest: Record<string, string> = require(filepath);
    return new AssetManifest(manifest);
  }
}
