"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateFiles = void 0;
const git_modules_git_ignore_1 = require("@teambit/git.modules.git-ignore");
const workspace_config_1 = require("./files/workspace-config");
const launch_json_1 = require("./files/launch-json");
const package_json_1 = require("./files/package-json");
function generateFiles(context, extraConfig, additionalEnvs) {
    return __awaiter(this, void 0, void 0, function* () {
        return [
            {
                relativePath: 'workspace.jsonc',
                content: yield (0, workspace_config_1.workspaceConfig)(context, extraConfig, additionalEnvs),
            },
            {
                relativePath: '.gitignore',
                content: (0, git_modules_git_ignore_1.gitIgnoreTemplate)(),
            },
            {
                relativePath: '.vscode/launch.json',
                content: (0, launch_json_1.launchJson)(),
            },
            {
                relativePath: 'package.json',
                content: (0, package_json_1.packageJson)()
            }
        ];
    });
}
exports.generateFiles = generateFiles;
//# sourceMappingURL=generate-files.js.map